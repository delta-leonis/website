{"version":3,"sources":["node_modules/browser-pack/_prelude.js","_js/blueprint.json","_js/main.js","_js/svgbuilder.js","node_modules/particles.js/particles.js","node_modules/svg.easing.js/dist/svg.easing.js","node_modules/svg.js/dist/svg.js","node_modules/vivus/dist/vivus.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","starSystem","opt","vivus","constellation","circles","stroke","width","color","fill","animation","data","cx","cy","paths","graph","base","lines","x","y","x1","y1","soccerPitch","pitch","polygons","ellipses","rx","ry","targetPlot","mainPlayer","otherPlayer1","otherPlayer2","_svgbuilder","blueprint","selectPage","canvas","hash","container","document","getElementById","substring","id","classList","contains","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","querySelectorAll","Symbol","iterator","next","done","value","remove","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","add","draw","content","querySelector","parentElement","each","this","removeClass","off","stop","ungroup","clear","animator","illustrator","dataset","addEventListener","SVG","size","viewbox","particlesJS","load","style","window","onpopstate","location","arguments","shapeRef","animationRef","element","shape","group","drawShapes","animationName","hasOwnProperty","oldRef","newRef","_ref7","_defineProperty","node","push","_vivus","default","type","duration","start","animTimingFunction","EASE_IN","otherPlayer","animateOtherPlayer","animateMainPlayer","plot","animatePlot","stars","animateStars","EASE_OUT","animateGraph","shapeName","_ref","shapes","reduce","drawFunctions","line","_ref2","poly","_ref3","_ref3$stroke","_ref3$fill","polygon","ellipse","_ref4","radius","center","path","_ref5","_ref5$stroke","_ref5$fill","circle","_ref6","_ref6$stroke","_ref6$fill","circleRef","getRandomNum","min","max","Math","floor","random","target","flip","children","animate","move","loop","scale","skew","starRef","childArray","_iteratorNormalCompletion3","_didIteratorError3","sun","shift","moon","pop","_iteratorError3","_step3","_iterator3","child","original","attr","_iteratorNormalCompletion4","_didIteratorError4","moonPath","_iteratorError4","_step4","_iterator4","setTimeout","_loop","during","pos","morph","eased","pointAt","l","Object","keys","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","pJS","tag_id","params","canvas_el","el","w","offsetWidth","h","offsetHeight","particles","number","density","enable","value_area","nb_sides","image","src","height","opacity","anim","speed","opacity_min","sync","size_min","line_linked","distance","direction","straight","out_mode","bounce","attract","rotateX","rotateY","array","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","repulse","particles_nb","mouse","retina_detect","fn","interact","vendors","tmp","deepExtend","obj","size_value","size_anim_speed","move_speed","line_linked_distance","line_linked_width","mode_grab_distance","mode_bubble_distance","mode_bubble_size","mode_repulse_distance","retinaInit","devicePixelRatio","pxratio","retina","canvasInit","ctx","getContext","canvasSize","particlesEmpty","particlesCreate","particlesDraw","densityAutoParticles","canvasPaint","fillRect","canvasClear","clearRect","particle","position","size_status","vs","checkOverlap","Array","color_selected","rgb","hexToRgb","g","b","s","hsl","opacity_status","vo","velbase","vx","vy","vx_i","vy_i","shape_type","shape_selected","sh","img","ratio","img_type","source_svg","createSvgImg","pushing","loaded","prototype","radius_bubble","opacity_bubble","color_value","fillStyle","beginPath","arc","PI","rect","drawShape","img_obj","drawImage","closePath","strokeStyle","lineWidth","particlesUpdate","ms","new_pos","x_left","x_right","y_top","y_bottom","isInArray","grabParticle","bubbleParticle","repulseParticle","j","p2","linkParticles","attractParticles","bounceParticles","particlesRefresh","cancelRequestAnimFrame","checkAnimFrame","drawAnimFrame","count_svg","p1","dx","dy","dist","sqrt","opacity_line","color_line","color_rgb_line","moveTo","lineTo","ax","ay","pushParticles","nb","pos_x","pos_y","removeParticles","splice","dx_mouse","dy_mouse","dist_mouse","init","status","dif","bubble_clicking","click_pos_x","click_pos_y","time_spent","Date","getTime","click_time","bubble_duration_end","process","bubble_param","particles_param","p_obj_bubble","p_obj","normVec","repulseRadius","repulseFactor","pow","repulse_finish","repulse_count","repulse_clicking","d","force","atan2","cos","sin","eventsListeners","clientX","clientY","offsetX","offsetY","area","nb_particles","missing_particles","abs","coloredSvgXml","replace","m","svg","Blob","DOMURL","URL","webkitURL","url","createObjectURL","Image","revokeObjectURL","destroypJS","cancelAnimationFrame","pJSDom","startX","startY","sideLength","sideCountNumerator","sideCountDenominator","sideCount","decimalSides","interiorAngleDegrees","interiorAngle","save","translate","rotate","restore","exportImg","open","toDataURL","loadImg","img_error","xhr","XMLHttpRequest","onreadystatechange","readyState","currentTarget","response","checkBeforeDraw","console","log","send","requestAnimFrame","check","substr","hex","result","exec","parseInt","indexOf","destination","source","property","constructor","callee","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","webkitCancelRequestAnimationFrame","mozCancelRequestAnimationFrame","oCancelRequestAnimationFrame","msCancelRequestAnimationFrame","clearTimeout","pJS_tag","pJS_canvas_class","exist_canvas","getElementsByClassName","removeChild","createElement","className","appendChild","path_config_json","JSON","parse","easing","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","sineIn","sineOut","sineInOut","expoIn","expoOut","expoInOut","circIn","circOut","circInOut","backIn","backOut","backInOut","swingFromTo","swingFrom","swingTo","bounceOut","elastic","key","root","factory","supported","Doc","parser","prepare","ns","xmlns","xlink","svgjs","createElementNS","createSVGRect","did","eid","name","capitalize","create","setAttribute","extend","modules","methods","slice","Set","inherit","invent","config","initializer","construct","parent","Container","adopt","instance","nodeName","parentNode","SVGElement","Nested","Gradient","Element","namespace","defs","setData","getAttribute","body","getElementsByTagName","documentElement","nested","polyline","native","regex","numberAndUnit","reference","transforms","whitespace","isHex","isRgb","isCss","isBlank","isNumber","isPercent","isImage","delimiter","hyphen","pathLetters","isPathLetter","numbersWithDots","dots","utils","map","block","il","filter","radians","degrees","filterSVGElements","nodes","defaults","attrs","fill-opacity","stroke-opacity","stroke-width","stroke-linejoin","stroke-linecap","offset","stop-opacity","stop-color","font-size","font-family","text-anchor","Color","match","test","join","toString","toHex","compToHex","toRgb","brightness","at","isColor","fallback","valueOf","lastValue","lastDestination","settle","seen","isArray","split","string","trim","parseFloat","reverse","clone","array_clone","arr","PointArray","toLine","x2","y2","points","len","box","bbox","isNaN","getBBox","pathHandlers","M","p0","L","H","V","C","S","Q","T","Z","A","mlhvqtcsa","jl","toUpperCase","PathArray","arrayToString","equalCommands","pathArray","sourceArray","destinationArray","paramCnt","pathRegReplace","prev","curr","concat","Point","index","Number","unit","isFinite","toJSON","plus","minus","times","divide","to","relative","_stroke","_event","dom","proportionalSize","writeDataToDom","assignNewId","cloneNode","after","removeElement","addTo","put","putIn","inside","show","hide","visible","classes","hasClass","addClass","toggleClass","get","matches","doc","parents","selector","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","well","Parent","innerHTML","firstChild","childNodes","removeAttribute","stringify","is","-","<>",">","<","from","MorphObj","Situation","reversed","reversing","delay","finish","ease","loops","animations","styles","once","FX","_target","situations","active","situation","paused","lastPos","absPos","_speed","queue","timeToAbsPos","timestamp","absPosToTime","startAnimFrame","stopAnimFrame","animationFrame","step","bind","startCurrent","initAnimations","dequeue","initialTransformation","matrixify","clearQueue","clearCurrent","jumpToEnd","atEnd","reset","temp","atStart","isAbsPos","durDivSpd","pause","last","play","progress","easeIt","on","wrapper","detail","_callStart","afterAll","duringAll","method","args","ignoreTime","absPosInt","lastLoop","Boolean","fire","fx","eachAt","self","apply","Matrix","multiply","undo","extract","matrix","isEased","real","v","G","transform","num","Text","leading","ViewBox","update","Stop","Box","left","top","fullBox","merge","xMin","Infinity","xMax","yMin","yMax","forEach","BBox","Exception","topParent","Shape","clientLeft","clientTop","clientWidth","clientHeight","tbox","warn","rbox","RBox","getBoundingClientRect","addOffset","pageXOffset","pageYOffset","screenCTM","inverse","arrayToMatrix","abcdef","px","deltaTransformPoint","py","skewX","transformedX","transformedY","skewY","scaleX","scaleY","rotation","parseMatrix","around","tan","createSVGMatrix","float32String","ctm","getCTM","getScreenCTM","point","createSVGPoint","matrixTransform","attributes","nodeValue","pattern","setAttributeNS","rebuild","ensureCentre","Rotate","Scale","Skew","Translate","untransform","str","kv","toParent","pCtm","toDoc","Transformation","inversed","_undo","cssText","camelCase","insertBefore","has","first","deep","hasChildNodes","lastChild","_defs","depth","Defs","flatten","view","we","he","wm","hm","reg","zoom","event","listeners","handlerMap","listenerId","listener","binding","options","ev","_svgjsListenerId","removeEventListener","Event","dispatchEvent","CustomEvent","cancelable","gbox","trans","version","spof","nextSibling","siblings","previous","forward","backward","front","back","before","Mask","targets","unmask","mask","maskWith","masker","ClipPath","unclip","clip","clipWith","clipper","gradient","fy","Pattern","patternUnits","Bare","words","text","createTextNode","symbol","Use","file","use","Rect","Circle","Ellipse","Line","Polyline","Polygon","_array","morphArray","Path","_loaded","_error","error","_rebuild","_build","oy","nodeType","newLined","textContent","build","tspan","newLine","textPath","blankLineOffset","plain","Tspan","getComputedTextLength","TextPath","track","link","linkTo","Marker","ref","marker","sugar","prefix","toLowerCase","charAt","comp","extension","dmove","getTotalLength","getPointAtLength","font","members","elements","set","remember","k","memory","forget","_memory","idFromReference","select","query","CustomEventPoly","bubbles","createEvent","initCustomEvent","lastTime","currTime","timeToCall","define","amd","Pathformer","String","SVGGElement","scan","setupEnv","cancelAnimFrame","parsePositiveInt","Vivus","isReady","setElement","setOptions","setCallback","TYPES","ATTR_WATCH","pathData","pathDom","tagName","parseAttr","pathMaker","replaceChild","lineToPath","newElement","rectToPath","polylineToPath","formattedPoints","polygonToPath","ellipseToPath","endX","endY","circleToPath","pathTag","output","LINEAR","EASE","EASE_OUT_BOUNCE","rate","rateR","onLoad","parentEl","domSandbox","responseText","svgTag","oReq","SVGSVGElement","HTMLObjectElement","contentDocument","allowedTypes","allowedStarts","isIE","navigator","userAgent","dashGap","forceRender","reverseStack","selfDestroy","onReady","frameLength","currentFrame","delayUnit","handle","ignoreInvisible","pathTimingFunction","Function","mapping","pAttrs","pathObj","totalLength","lengthMeter","timePoint","isInvisible","ceil","strokeDasharray","strokeDashoffset","renderPath","startAt","drawer","trace","destroy","instanceCallback","newPath","starter","isInViewport","getStatus","setFrameProgress","round","ignoreAttr","scrolled","scrollY","viewed","getViewportH","elBCR","elHeight","elTop","client","docElem","inner","innerHeight","scrollTop","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","defaultValue"],"mappings":"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","file":"javascript.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\n  \"starSystem\": {\n    \"opt\": {\n      \"vivus\": false\n    },\n    \"constellation\": {\n      \"circles\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\":0,\n            \"color\": \"#ffffff\"\n          },\n          \"fill\": \"#ffffff\",\n          \"animation\": \"stars\"\n        },\n        \"data\": [\n          {\"r\":55,\"cx\":320,\"cy\":240},\n          {\"r\":7,\"cx\":377,\"cy\":240},\n          {\"r\":12,\"cx\":395,\"cy\":240},\n          {\"r\":20,\"cx\":422,\"cy\":240},\n          {\"r\":15,\"cx\":474,\"cy\":240},\n          {\"r\":10,\"cx\":497,\"cy\":240}\n        ]\n      },\n      \"paths\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\":0.4,\n            \"color\": \"#ffffff\"\n          },\n          \"fill\": \"none\",\n          \"animation\": \"stars\"\n        },\n        \"data\": [\n          \"M376.5,240c0,31.2-25.3,56.5-56.5,56.5s-56.5-25.3-56.5-56.5s25.3-56.5,56.5-56.5S376.5,208.8,376.5,240z\",\n          \"M393.5,240c0,40.6-32.9,73.5-73.5,73.5s-73.5-32.9-73.5-73.5s32.9-73.5,73.5-73.5S393.5,199.4,393.5,240z\",\n          \"M421.5,240c0,56.1-45.4,101.5-101.5,101.5S218.5,296.1,218.5,240S263.9,138.5,320,138.5S421.5,183.9,421.5,240z\",\n          \"M474,240c0,85.1-68.9,154-154,154s-154-68.9-154-154S234.9,86,320,86S474,154.9,474,240z\",\n          \"M496.5,240c0,12.2-9.8,22-22,22s-22-9.8-22-22s9.8-22,22-22S496.5,227.8,496.5,240z\"\n        ]\n      }\n\n    }\n  },\n  \"graph\": {\n    \"opt\": {\n      \"vivus\": false\n    },\n    \"base\": {\n      \"lines\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\": 0.5,\n            \"color\": \"#ffffff\"\n          },\n          \"animation\": \"base\"\n        },\n        \"data\": [\n          {\n            \"x\":\"258.3\",\n            \"y\":\"192.3\",\n            \"x1\":\"548\",\n            \"y1\":\"232.6\"\n          },\n          {\n            \"x\":\"258.3\",\n            \"y\":\"192.3\",\n            \"x1\":\"92\",\n            \"y1\":\"409.6\"\n          },\n          {\n            \"x\":\"258.3\",\n            \"y\":\"192.3\",\n            \"x1\":\"255.6\",\n            \"y1\":\"19.4\"\n          }\n        ]\n      }\n    },\n    \"graph\": {\n      \"lines\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\": 1.75,\n            \"color\": \"#ffffff\"\n          },\n          \"animation\": \"graph\"\n        },\n        \"data\": [\n          {\"x\":\"303.9\", \"y\":\"71.5\" , \"x1\":\"303.9\", \"y1\":\"221.9\"},\n          {\"x\":\"322.7\", \"y\":\"79.6\" , \"x1\":\"322.7\", \"y1\":\"224.6\"},\n          {\"x\":\"338.8\", \"y\":\"93\"   , \"x1\":\"338.8\", \"y1\":\"227.2\"},\n          {\"x\":\"354.9\", \"y\":\"109.1\", \"x1\":\"354.9\", \"y1\":\"232.6\"},\n          {\"x\":\"371\"  , \"y\":\"127.9\", \"x1\":\"371\"  , \"y1\":\"240.7\"},\n          {\"x\":\"387.1\", \"y\":\"151\"  , \"x1\":\"387.1\", \"y1\":\"253\"},\n          {\"x\":\"403.2\", \"y\":\"178.9\", \"x1\":\"403.2\", \"y1\":\"272.9\"},\n          {\"x\":\"418.5\", \"y\":\"247\"  , \"x1\":\"418.5\", \"y1\":\"335\"},\n          {\"x\":\"403.2\", \"y\":\"283.6\", \"x1\":\"403.2\", \"y1\":\"366.8\"},\n          {\"x\":\"387.1\", \"y\":\"301\"  , \"x1\":\"387.1\", \"y1\":\"374\"},\n          {\"x\":\"371\"  , \"y\":\"377.6\", \"x1\":\"371\"  , \"y1\":\"313.2\"},\n          {\"x\":\"354.9\", \"y\":\"377.6\", \"x1\":\"354.9\", \"y1\":\"321.2\"},\n          {\"x\":\"338.8\", \"y\":\"377.6\", \"x1\":\"338.8\", \"y1\":\"329.3\"},\n          {\"x\":\"320\"  , \"y\":\"377.6\", \"x1\":\"320\"  , \"y1\":\"337.3\"},\n          {\"x\":\"306.6\", \"y\":\"342.7\", \"x1\":\"306.6\", \"y1\":\"377.6\"},\n          {\"x\":\"290.5\", \"y\":\"377.6\", \"x1\":\"290.5\", \"y1\":\"345.4\"},\n          {\"x\":\"271.7\", \"y\":\"353.4\", \"x1\":\"271.7\", \"y1\":\"383\"},\n          {\"x\":\"271.7\", \"y\":\"395\"  , \"x1\":\"271.7\", \"y1\":\"421\"},\n          {\"x\":\"258\",   \"y\":\"377\"  , \"x1\":\"258\",   \"y1\":\"403\"},\n          {\"x\":\"290.5\", \"y\":\"409.8\", \"x1\":\"290.5\", \"y1\":\"444\"}\n        ]\n      },\n      \"paths\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\":3,\n            \"color\": \"#ffffff\"\n          },\n          \"fill\": \"none\",\n          \"animation\": \"graph\"\n        },\n        \"data\": [\n          \"M305.2,421.9c-16.1-13.4-83.2-53.7-24.2-72.5s190.6-53.7,115.4-182.5c0,0-51-94-107.4-99.3\",\n          \"M289.1,223.2c126.2-5.4,130.2,98,130.2,98c0,56.4-36.2,55-57.7,55c-17.9,0-35.7,0.9-53.5,1.8c-7.3,0.3-14.9,0.2-22.2,1.3c-8.1,1.3-20.2,4.8-25,11.9c-3.2,4.7-4.1,11.3-0.3,15.8c14.6,17.3,28.5,35.2,42.7,52.9c0.2,0.3,0.4,0.5,0.7,0.8\"\n        ]\n      }\n    }\n\n  },\n  \"soccerPitch\": {\n    \"opt\": {\n      \"vivus\": true\n    },\n    \"pitch\": {\n      \"polygons\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\":4,\n            \"color\": \"#ffffff\"\n          },\n          \"fill\": \"none\",\n          \"animation\": \"none\"\n        },\n        \"data\": [\n          \"47.6,215.1 420.2,372 593.4,295.2 238.8,144\",\n          \"84.4,201.4 121.1,215.9 240.4,169.3 203.6,157.1\",\n          \"560.8,309.9 530.5,296 427.6,342.6 455.3,356.5 560.8,309.9\"\n        ]\n      },\n      \"lines\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\":4,\n            \"color\": \"#ffffff\"\n          },\n          \"animation\": \"none\"\n        },\n        \"data\": [\n          {\n            \"x\":\"346.4\",\n            \"y\":\"239.4\",\n            \"x1\":\"408.8\",\n            \"y1\":\"215.9\"\n          },\n          {\n            \"x\":\"220.7\",\n            \"y\":\"286.9\",\n            \"x1\":\"292.9\",\n            \"y1\":\"259.6\"\n          }\n        ]\n      },\n      \"ellipses\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\":4,\n            \"color\": \"#ffffff\"\n          },\n          \"fill\": \"none\",\n          \"animation\": \"none\"\n        },\n        \"data\": [\n          {\n            \"rx\":\"31.9\",\n            \"ry\":\"18.8\",\n            \"cx\":\"321.3\",\n            \"cy\":\"251.1\"\n          }\n        ]\n      }\n    },\n    \"targetPlot\": {\n      \"paths\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\":0,\n            \"color\": \"#ffffff\"\n          },\n          \"fill\": \"#ffffff\",\n          \"animation\": \"plot\"\n        },\n        \"data\": [\n          \"M406.2,246.1l6.9,3l-0.5,1.1l-6.9-3L406.2,246.1z\",\n          \"M403.3,246.1l0.5-1.1l1.4,0.6l-0.5,1.1L403.3,246.1z\",\n          \"M413.6,250.7l0.5-1.1l1.4,0.6l-0.5,1.1L413.6,250.7z\",\n          \"M419,251.7l6.9,3l-0.5,1.1l-6.9-3L419,251.7z\",\n          \"M416.1,251.7l0.5-1.1l1.4,0.6l-0.5,1.1L416.1,251.7z\",\n          \"M426.4,256.3l0.5-1.1l1.4,0.6l-0.5,1.1L426.4,256.3z\",\n          \"M431.8,257.3l6.9,3l-0.5,1.1l-6.9-3L431.8,257.3z\",\n          \"M428.8,257.3l0.5-1.1l1.4,0.6l-0.5,1.1L428.8,257.3z\",\n          \"M439.2,261.9l0.5-1.1l1.4,0.6l-0.5,1.1L439.2,261.9z\",\n          \"M449.4,253.1l0.3-8.3l1.2,0l-0.3,8.3L449.4,253.1z\",\n          \"M450.6,256.1l-1.2,0l0.1-1.7l1.2,0L450.6,256.1z\",\n          \"M451,243.6l-1.2,0l0.1-1.7l1.2,0L451,243.6z\",\n          \"M454.1,264.7l-7.5,4l-0.6-1.1l7.5-4L454.1,264.7z\",\n          \"M456.1,262.3l0.6,1.1l-1.5,0.8l-0.6-1.1L456.1,262.3z\",\n          \"M444.9,268.2l0.6,1.1l-1.5,0.8l-0.6-1.1L444.9,268.2z\",\n          \"M440,261.4c0.9-3.6,6-6.3,9.7-6.3\",\n          \"M593.4,261.7\",\n          \"M449.3,257.7 450.5,257.7 450.2,266.7 441.9,263.1 442.4,261.9 449,264.8\"\n        ]\n      }\n    },\n    \"mainPlayer\": {\n      \"ellipses\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\":0,\n            \"color\": \"#ffffff\"\n          },\n          \"fill\": \"#ffffff\",\n          \"animation\": \"mainPlayer\"\n        },\n        \"data\": [\n          {\n            \"rx\":\"10.2\",\n            \"ry\":\"5.3\",\n            \"cx\":\"465.6\",\n            \"cy\":\"273.5\"\n          }\n        ]\n      }\n    },\n    \"otherPlayer1\": {\n      \"paths\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\":0,\n            \"color\": \"#ffffff\"\n          },\n          \"fill\": \"#ffffff\",\n          \"animation\": \"otherPlayer\"\n        },\n        \"data\": [\n          \"M378.1,300.1c-1.9,0.8-3.9,1.1-5.9,1.1c-2,0-4.1-0.3-5.9-1.1l-1.4,1.3c2.4,1.2,5.3,1.7,8,1.6c2.7-0.1,5.2-0.7,7.3-1.9L378.1,300.1z\",\n          \"M381.2,297.3l2.4,0.2c-0.3,0.9-0.9,1.7-1.7,2.3l-2.3-0.7C380.3,298.7,380.9,298.1,381.2,297.3z\",\n          \"M364.7,299.2L363,300c-0.8-0.7-1.4-1.5-1.8-2.4l2-0.3C363.5,298.1,364.1,298.7,364.7,299.2z\",\n          \"M366.3,292.8c1.9-0.8,3.9-1.1,5.9-1.1c2,0,4.1,0.3,5.9,1.1l2.1-1c-2.1-1.1-4.6-1.7-7.3-1.9c-2.7-0.1-5.6,0.4-8,1.6L366.3,292.8z\",\n          \"M363.2,295.5l-2-0.3c0.3-1,1-1.8,1.8-2.4l1.8,0.9C364,294.1,363.5,294.7,363.2,295.5z\",\n          \"M379.7,293.6l2.3-0.7c0.7,0.6,1.4,1.4,1.7,2.3l-2.4,0.2C380.9,294.7,380.3,294.1,379.7,293.6z\"\n        ]\n      }\n    },\n    \"otherPlayer2\": {\n      \"paths\": {\n        \"opt\": {\n          \"stroke\": {\n            \"width\":0,\n            \"color\": \"#ffffff\"\n          },\n          \"fill\": \"#ffffff\",\n          \"animation\": \"otherPlayer\"\n        },\n        \"data\": [\n          \"M328.8,202.9c-1.5,0.6-3.1,0.9-4.7,0.9c-1.6,0-3.2-0.3-4.7-0.9l-1.1,1c1.9,1,4.2,1.3,6.4,1.3c2.2-0.1,4.2-0.6,5.9-1.5L328.8,202.9z\",\n          \"M331.2,200.7l1.9,0.2c-0.2,0.8-0.8,1.4-1.3,1.9l-1.8-0.5C330.5,201.8,331,201.3,331.2,200.7z\",\n          \"M318,202.2l-1.4,0.7c-0.6-0.5-1.2-1.2-1.4-1.9l1.6-0.2C317,201.3,317.5,201.8,318,202.2z\",\n          \"M319.3,197.1c1.5-0.6,3.1-0.9,4.7-0.9c1.6,0,3.2,0.3,4.7,0.9l1.7-0.8c-1.7-0.9-3.7-1.4-5.9-1.5c-2.2-0.1-4.5,0.3-6.4,1.3L319.3,197.1z\",\n          \"M316.8,199.3l-1.6-0.2c0.3-0.8,0.8-1.4,1.4-2l1.4,0.7C317.5,198.2,317,198.6,316.8,199.3z\",\n          \"M330,197.8l1.8-0.5c0.6,0.5,1.1,1.1,1.3,1.8l-1.9,0.2C331,198.6,330.5,198.1,330,197.8z\"\n        ]\n      }\n    }\n  }\n}\n","var blueprint = require(\"./blueprint.json\");\nrequire(\"particles.js\");\nimport { animator, illustrator } from \"./svgbuilder\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let canvas = SVG(\"svg-container\").size(\"530\", \"330\").viewbox(0, 0, 640, 480);\n\n  particlesJS.load(\"particles-js\", \"./assets/particlesjs.json\", () =>\n    document.getElementById(\"particles-js\").style.animation = \"show 2s forwards\");\n\n  window.onpopstate = () => selectPage(canvas, window.location.hash);\n  selectPage(canvas, window.location.hash);\n});\n\nfunction selectPage(canvas, hash) {\n  let container = document.getElementById(hash.substring(1)) || document.getElementById(\"home\");\n  let id = container.id;\n  if (container.classList.contains(\"active\")) return;\n\n  // remove existing active classes and hide all\n  for (let element of document.querySelectorAll(\".active\")) {\n    element.classList.remove(\"active\");\n  }\n  for (let element of document.querySelectorAll(\"#content div\")) {\n    element.classList.add(\"hidden\");\n  }\n\n  // add .active to the new active item and content\n  let content = document.getElementById(id);\n  content.classList.remove(\"hidden\");\n  content.classList.add(\"active\");\n  document.querySelector(\"a[href=\\\"#\" + id + \"\\\"]\").parentElement.classList.add(\"active\");\n\n  clearCanvas(canvas);\n  animator(illustrator(canvas, blueprint[content.dataset.animation]));\n}\n\nfunction clearCanvas(draw) {\n  draw.each(function() {\n    this.removeClass(\"*\");\n    this.off();\n    this.stop();\n  }, true);\n  draw.ungroup();\n  draw.clear();\n}\n","require(\"svg.js\");\nrequire(\"svg.easing.js\");\nimport Vivus from \"vivus\";\n\nexport { illustrator, animator };\n\nfunction illustrator(canvas, blueprint = []) {\n  let shapeRef = [],\n      animationRef = {};\n\n  for (let element in blueprint) {\n      if (element !== \"opt\") {\n          for (let shape in blueprint[element]) {\n              let group = drawShapes(canvas, shape, blueprint[element][shape]);\n              if (blueprint[element][shape].opt.animation !== \"none\") {\n                  let animationName = blueprint[element][shape].opt.animation;\n                  if (animationRef.hasOwnProperty(animationName)) {\n                      animationRef[animationName] = pack(animationRef[animationName], group);\n                  } else {\n                      animationRef[animationName] = group;\n                  }\n              }\n              shapeRef.push({group});\n          }\n      }\n  }\n  return {\n      canvas: canvas,\n      shape: shapeRef,\n      animation: animationRef,\n      vivus: blueprint.opt && blueprint.opt.vivus || \"none\",\n  };\n}\n\nfunction animator(blueprint) {\n  let animationRef = {};\n  blueprint.canvas.node.style.animation = \"\";\n  if (blueprint.vivus === true) {\n      const myVivus = new Vivus(blueprint.canvas.node.id, {type: \"delayed\", duration: 100, start: \"autostart\", animTimingFunction: Vivus.EASE_IN});\n  }\n  for (let animation in blueprint.animation) {\n      switch (animation) {\n          case \"otherPlayer\":\n              let otherPlayer = animateOtherPlayer(blueprint.animation[animation]);\n              animationRef.otherPlayer = otherPlayer;\n              break;\n          case \"mainPlayer\":\n              let mainPlayer = animateMainPlayer(blueprint.animation[animation]);\n              animationRef.mainPlayer = mainPlayer;\n              break;\n          case \"plot\":\n              let plot = animatePlot(blueprint.animation[animation]);\n              animationRef.plot = plot;\n              break;\n          case \"stars\":\n              let stars = animateStars(blueprint.animation[animation], blueprint.canvas.node);\n              animationRef.stars = stars;\n              break;\n          case \"base\":\n              let base = new Vivus(blueprint.animation[animation].node.id, {type: \"sync\", duration: 50, animTimingFunction: Vivus.EASE_OUT});\n              animationRef.base = base;\n              break;\n          case \"graph\":\n              let graph = animateGraph(blueprint.animation[animation]);\n              animationRef.graph = graph;\n              break;\n      }\n  }\n  return {animationRef, blueprint};\n}\n\nfunction drawShapes(canvas, shapeName, {data: shapes, opt}) {\n  return shapes.reduce((group, shape) => group.add(drawFunctions[shapeName](canvas, shape, opt)), canvas.group());\n}\n\nconst drawFunctions = {\n  lines: (canvas, line, {stroke}) =>\n    canvas.line(line.x, line.y, line.x1, line.y1).stroke(stroke),\n  polygons: (canvas, poly, {stroke = \"none\", fill = \"none\"}) =>\n    canvas.polygon(poly).stroke(stroke).fill(fill),\n  ellipses: (canvas, ellipse, {stroke, fill}) =>\n    canvas.ellipse().radius(ellipse.rx, ellipse.ry).center(ellipse.cx, ellipse.cy).stroke(stroke).fill(fill),\n  paths: (canvas, path, {stroke = \"none\", fill = \"none\"}) =>\n    canvas.path(path).stroke(stroke).fill(fill),\n  circles: (canvas, circle, {stroke = \"none\", fill = \"none\"}) => {\n    let circleRef = canvas.circle(circle.r).stroke(stroke).fill(fill);\n    if (circle.hasOwnProperty(\"cx\")) {\n        circleRef.center(circle.cx, circle.cy);\n    }\n    return circleRef;\n  },\n};\n\nfunction pack(oldRef, newRef) {\n  return {[oldRef.node.id]: oldRef, [newRef.node.id]: newRef};\n}\n\nfunction getRandomNum(min, max) {\n  return Math.floor(Math.random() * max) + min;\n}\n\nfunction getRandomColor() {\n  let letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction animateOtherPlayer(target) {\n  let flip = false;\n  for (let group in target) {\n      for (let child of target[group].children()) {\n          child.fill(\"#000000\").animate(1000).fill(\"#fff\");\n      }\n      if (!flip) {\n          target[group].animate(7000, \"swingTo\", 500).move(25, -25).loop(true, true);\n          flip = true;\n      } else {\n          target[group].animate(5000, \"swingTo\", 500).move(25, 15).loop(true, true);\n      }\n  }\n  return target;\n}\n\nfunction animateMainPlayer(target) {\n  target.children()[0].fill(\"#000\").scale(0.1).animate(1500, \"elastic\").scale(1).fill(\"#fff\");\n  return target;\n}\n\nfunction animatePlot(target) {\n  for (let child of target.children()) {\n      child.fill(\"#000\").animate(1400).fill(\"#fff\");\n  }\n  target.animate(3000, \"elastic\").skew(10, 0);\n  return target;\n}\n\nfunction animateStars(target, id) {\n  let starRef = {};\n  let duration = 16000;\n  id.style.animation = \"tilt 2s forwards\";\n  for (let group in target) {\n      let type = target[group].children()[0].type;\n      let childArray = target[group].children();\n      if (type === \"circle\") {\n          starRef[type] = {sun: childArray.shift(), moon: childArray.pop(), data: childArray};\n\n          for (let child of target[group].children()) {\n              let original = child.attr(\"r\");\n              child.attr({\"r\": 0.1}).animate(getRandomNum(1000, 1500), \"elastic\").attr({\"r\": original});\n          }\n      } else {\n          starRef[type] = {moonPath: childArray.pop(), data: childArray};\n          for (let child of target[group].children()) {\n              child.scale(0.1).stroke({width: 0, color: \"#000000\"}).animate(getRandomNum(1000, 1500), \"elastic\").scale(1).stroke({width: 0.4, color: \"#fff\"});\n          }\n      }\n  }\n  setTimeout(() => {\n      for (let i = 0; i < starRef.circle.data.length; i++) {\n          duration += getRandomNum(10000, 25000);\n          let length = starRef.path.data[i].length();\n          starRef.circle.data[i].animate(duration).during((pos, morph, eased) =>{\n              let p = starRef.path.data[i].pointAt(eased * length);\n              starRef.circle.data[i].center(p.x, p.y);\n          }).loop(true);\n          if (i === 3) {\n              starRef.circle.moon.animate(8000).during((pos, morph, eased) => {\n                  let l = starRef.path.moonPath.length();\n                  let p = starRef.path.moonPath.pointAt(eased * l);\n                  starRef.circle.moon.center(p.x, p.y);\n              }).loop(true);\n              starRef.path.moonPath.animate(duration).during((pos, morph, eased) => {\n                  let p = starRef.path.data[i].pointAt(eased * length);\n                  starRef.path.moonPath.center(p.x, p.y);\n              }).loop(true);\n          }\n      }\n      return target;\n  }, 2500);\n}\n\nfunction animateGraph(target) {\n  let lines = target[Object.keys(target)[0]];\n  let paths = target[Object.keys(target)[1]];\n  let vPath = new Vivus(paths.node.id, {type: \"sync\", duration: 100, start: \"autostart\", animTimingFunction: Vivus.EASE_OUT});\n  let vLine = new Vivus(lines.node.id, {type: \"delayed\", duration: 75, start: \"autostart\", animTimingFunction: Vivus.EASE_OUT}, () => {\n      for (let line of lines.children()) {\n          line.animate(getRandomNum(1000, 3000), \"<>\", 500).stroke({width: 2, color: \"#333333\"}).loop(true, true);\n      }\n      return target;\n  });\n}\n","/* -----------------------------------------------\n/* Author : Vincent Garreau  - vincentgarreau.com\n/* MIT license: http://opensource.org/licenses/MIT\n/* Demo / Generator : vincentgarreau.com/particles.js\n/* GitHub : github.com/VincentGarreau/particles.js\n/* How to use? : Check the GitHub README\n/* v2.0.0\n/* ----------------------------------------------- */\n\nvar pJS = function(tag_id, params){\n\n  var canvas_el = document.querySelector('#'+tag_id+' > .particles-js-canvas-el');\n\n  /* particles.js variables with default values */\n  this.pJS = {\n    canvas: {\n      el: canvas_el,\n      w: canvas_el.offsetWidth,\n      h: canvas_el.offsetHeight\n    },\n    particles: {\n      number: {\n        value: 400,\n        density: {\n          enable: true,\n          value_area: 800\n        }\n      },\n      color: {\n        value: '#fff'\n      },\n      shape: {\n        type: 'circle',\n        stroke: {\n          width: 0,\n          color: '#ff0000'\n        },\n        polygon: {\n          nb_sides: 5\n        },\n        image: {\n          src: '',\n          width: 100,\n          height: 100\n        }\n      },\n      opacity: {\n        value: 1,\n        random: false,\n        anim: {\n          enable: false,\n          speed: 2,\n          opacity_min: 0,\n          sync: false\n        }\n      },\n      size: {\n        value: 20,\n        random: false,\n        anim: {\n          enable: false,\n          speed: 20,\n          size_min: 0,\n          sync: false\n        }\n      },\n      line_linked: {\n        enable: true,\n        distance: 100,\n        color: '#fff',\n        opacity: 1,\n        width: 1\n      },\n      move: {\n        enable: true,\n        speed: 2,\n        direction: 'none',\n        random: false,\n        straight: false,\n        out_mode: 'out',\n        bounce: false,\n        attract: {\n          enable: false,\n          rotateX: 3000,\n          rotateY: 3000\n        }\n      },\n      array: []\n    },\n    interactivity: {\n      detect_on: 'canvas',\n      events: {\n        onhover: {\n          enable: true,\n          mode: 'grab'\n        },\n        onclick: {\n          enable: true,\n          mode: 'push'\n        },\n        resize: true\n      },\n      modes: {\n        grab:{\n          distance: 100,\n          line_linked:{\n            opacity: 1\n          }\n        },\n        bubble:{\n          distance: 200,\n          size: 80,\n          duration: 0.4\n        },\n        repulse:{\n          distance: 200,\n          duration: 0.4\n        },\n        push:{\n          particles_nb: 4\n        },\n        remove:{\n          particles_nb: 2\n        }\n      },\n      mouse:{}\n    },\n    retina_detect: false,\n    fn: {\n      interact: {},\n      modes: {},\n      vendors:{}\n    },\n    tmp: {}\n  };\n\n  var pJS = this.pJS;\n\n  /* params settings */\n  if(params){\n    Object.deepExtend(pJS, params);\n  }\n\n  pJS.tmp.obj = {\n    size_value: pJS.particles.size.value,\n    size_anim_speed: pJS.particles.size.anim.speed,\n    move_speed: pJS.particles.move.speed,\n    line_linked_distance: pJS.particles.line_linked.distance,\n    line_linked_width: pJS.particles.line_linked.width,\n    mode_grab_distance: pJS.interactivity.modes.grab.distance,\n    mode_bubble_distance: pJS.interactivity.modes.bubble.distance,\n    mode_bubble_size: pJS.interactivity.modes.bubble.size,\n    mode_repulse_distance: pJS.interactivity.modes.repulse.distance\n  };\n\n\n  pJS.fn.retinaInit = function(){\n\n    if(pJS.retina_detect && window.devicePixelRatio > 1){\n      pJS.canvas.pxratio = window.devicePixelRatio; \n      pJS.tmp.retina = true;\n    } \n    else{\n      pJS.canvas.pxratio = 1;\n      pJS.tmp.retina = false;\n    }\n\n    pJS.canvas.w = pJS.canvas.el.offsetWidth * pJS.canvas.pxratio;\n    pJS.canvas.h = pJS.canvas.el.offsetHeight * pJS.canvas.pxratio;\n\n    pJS.particles.size.value = pJS.tmp.obj.size_value * pJS.canvas.pxratio;\n    pJS.particles.size.anim.speed = pJS.tmp.obj.size_anim_speed * pJS.canvas.pxratio;\n    pJS.particles.move.speed = pJS.tmp.obj.move_speed * pJS.canvas.pxratio;\n    pJS.particles.line_linked.distance = pJS.tmp.obj.line_linked_distance * pJS.canvas.pxratio;\n    pJS.interactivity.modes.grab.distance = pJS.tmp.obj.mode_grab_distance * pJS.canvas.pxratio;\n    pJS.interactivity.modes.bubble.distance = pJS.tmp.obj.mode_bubble_distance * pJS.canvas.pxratio;\n    pJS.particles.line_linked.width = pJS.tmp.obj.line_linked_width * pJS.canvas.pxratio;\n    pJS.interactivity.modes.bubble.size = pJS.tmp.obj.mode_bubble_size * pJS.canvas.pxratio;\n    pJS.interactivity.modes.repulse.distance = pJS.tmp.obj.mode_repulse_distance * pJS.canvas.pxratio;\n\n  };\n\n\n\n  /* ---------- pJS functions - canvas ------------ */\n\n  pJS.fn.canvasInit = function(){\n    pJS.canvas.ctx = pJS.canvas.el.getContext('2d');\n  };\n\n  pJS.fn.canvasSize = function(){\n\n    pJS.canvas.el.width = pJS.canvas.w;\n    pJS.canvas.el.height = pJS.canvas.h;\n\n    if(pJS && pJS.interactivity.events.resize){\n\n      window.addEventListener('resize', function(){\n\n          pJS.canvas.w = pJS.canvas.el.offsetWidth;\n          pJS.canvas.h = pJS.canvas.el.offsetHeight;\n\n          /* resize canvas */\n          if(pJS.tmp.retina){\n            pJS.canvas.w *= pJS.canvas.pxratio;\n            pJS.canvas.h *= pJS.canvas.pxratio;\n          }\n\n          pJS.canvas.el.width = pJS.canvas.w;\n          pJS.canvas.el.height = pJS.canvas.h;\n\n          /* repaint canvas on anim disabled */\n          if(!pJS.particles.move.enable){\n            pJS.fn.particlesEmpty();\n            pJS.fn.particlesCreate();\n            pJS.fn.particlesDraw();\n            pJS.fn.vendors.densityAutoParticles();\n          }\n\n        /* density particles enabled */\n        pJS.fn.vendors.densityAutoParticles();\n\n      });\n\n    }\n\n  };\n\n\n  pJS.fn.canvasPaint = function(){\n    pJS.canvas.ctx.fillRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n  };\n\n  pJS.fn.canvasClear = function(){\n    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n  };\n\n\n  /* --------- pJS functions - particles ----------- */\n\n  pJS.fn.particle = function(color, opacity, position){\n\n    /* size */\n    this.radius = (pJS.particles.size.random ? Math.random() : 1) * pJS.particles.size.value;\n    if(pJS.particles.size.anim.enable){\n      this.size_status = false;\n      this.vs = pJS.particles.size.anim.speed / 100;\n      if(!pJS.particles.size.anim.sync){\n        this.vs = this.vs * Math.random();\n      }\n    }\n\n    /* position */\n    this.x = position ? position.x : Math.random() * pJS.canvas.w;\n    this.y = position ? position.y : Math.random() * pJS.canvas.h;\n\n    /* check position  - into the canvas */\n    if(this.x > pJS.canvas.w - this.radius*2) this.x = this.x - this.radius;\n    else if(this.x < this.radius*2) this.x = this.x + this.radius;\n    if(this.y > pJS.canvas.h - this.radius*2) this.y = this.y - this.radius;\n    else if(this.y < this.radius*2) this.y = this.y + this.radius;\n\n    /* check position - avoid overlap */\n    if(pJS.particles.move.bounce){\n      pJS.fn.vendors.checkOverlap(this, position);\n    }\n\n    /* color */\n    this.color = {};\n    if(typeof(color.value) == 'object'){\n\n      if(color.value instanceof Array){\n        var color_selected = color.value[Math.floor(Math.random() * pJS.particles.color.value.length)];\n        this.color.rgb = hexToRgb(color_selected);\n      }else{\n        if(color.value.r != undefined && color.value.g != undefined && color.value.b != undefined){\n          this.color.rgb = {\n            r: color.value.r,\n            g: color.value.g,\n            b: color.value.b\n          }\n        }\n        if(color.value.h != undefined && color.value.s != undefined && color.value.l != undefined){\n          this.color.hsl = {\n            h: color.value.h,\n            s: color.value.s,\n            l: color.value.l\n          }\n        }\n      }\n\n    }\n    else if(color.value == 'random'){\n      this.color.rgb = {\n        r: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\n        g: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\n        b: (Math.floor(Math.random() * (255 - 0 + 1)) + 0)\n      }\n    }\n    else if(typeof(color.value) == 'string'){\n      this.color = color;\n      this.color.rgb = hexToRgb(this.color.value);\n    }\n\n    /* opacity */\n    this.opacity = (pJS.particles.opacity.random ? Math.random() : 1) * pJS.particles.opacity.value;\n    if(pJS.particles.opacity.anim.enable){\n      this.opacity_status = false;\n      this.vo = pJS.particles.opacity.anim.speed / 100;\n      if(!pJS.particles.opacity.anim.sync){\n        this.vo = this.vo * Math.random();\n      }\n    }\n\n    /* animation - velocity for speed */\n    var velbase = {}\n    switch(pJS.particles.move.direction){\n      case 'top':\n        velbase = { x:0, y:-1 };\n      break;\n      case 'top-right':\n        velbase = { x:0.5, y:-0.5 };\n      break;\n      case 'right':\n        velbase = { x:1, y:-0 };\n      break;\n      case 'bottom-right':\n        velbase = { x:0.5, y:0.5 };\n      break;\n      case 'bottom':\n        velbase = { x:0, y:1 };\n      break;\n      case 'bottom-left':\n        velbase = { x:-0.5, y:1 };\n      break;\n      case 'left':\n        velbase = { x:-1, y:0 };\n      break;\n      case 'top-left':\n        velbase = { x:-0.5, y:-0.5 };\n      break;\n      default:\n        velbase = { x:0, y:0 };\n      break;\n    }\n\n    if(pJS.particles.move.straight){\n      this.vx = velbase.x;\n      this.vy = velbase.y;\n      if(pJS.particles.move.random){\n        this.vx = this.vx * (Math.random());\n        this.vy = this.vy * (Math.random());\n      }\n    }else{\n      this.vx = velbase.x + Math.random()-0.5;\n      this.vy = velbase.y + Math.random()-0.5;\n    }\n\n    // var theta = 2.0 * Math.PI * Math.random();\n    // this.vx = Math.cos(theta);\n    // this.vy = Math.sin(theta);\n\n    this.vx_i = this.vx;\n    this.vy_i = this.vy;\n\n    \n\n    /* if shape is image */\n\n    var shape_type = pJS.particles.shape.type;\n    if(typeof(shape_type) == 'object'){\n      if(shape_type instanceof Array){\n        var shape_selected = shape_type[Math.floor(Math.random() * shape_type.length)];\n        this.shape = shape_selected;\n      }\n    }else{\n      this.shape = shape_type;\n    }\n\n    if(this.shape == 'image'){\n      var sh = pJS.particles.shape;\n      this.img = {\n        src: sh.image.src,\n        ratio: sh.image.width / sh.image.height\n      }\n      if(!this.img.ratio) this.img.ratio = 1;\n      if(pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg != undefined){\n        pJS.fn.vendors.createSvgImg(this);\n        if(pJS.tmp.pushing){\n          this.img.loaded = false;\n        }\n      }\n    }\n\n    \n\n  };\n\n\n  pJS.fn.particle.prototype.draw = function() {\n\n    var p = this;\n\n    if(p.radius_bubble != undefined){\n      var radius = p.radius_bubble; \n    }else{\n      var radius = p.radius;\n    }\n\n    if(p.opacity_bubble != undefined){\n      var opacity = p.opacity_bubble;\n    }else{\n      var opacity = p.opacity;\n    }\n\n    if(p.color.rgb){\n      var color_value = 'rgba('+p.color.rgb.r+','+p.color.rgb.g+','+p.color.rgb.b+','+opacity+')';\n    }else{\n      var color_value = 'hsla('+p.color.hsl.h+','+p.color.hsl.s+'%,'+p.color.hsl.l+'%,'+opacity+')';\n    }\n\n    pJS.canvas.ctx.fillStyle = color_value;\n    pJS.canvas.ctx.beginPath();\n\n    switch(p.shape){\n\n      case 'circle':\n        pJS.canvas.ctx.arc(p.x, p.y, radius, 0, Math.PI * 2, false);\n      break;\n\n      case 'edge':\n        pJS.canvas.ctx.rect(p.x-radius, p.y-radius, radius*2, radius*2);\n      break;\n\n      case 'triangle':\n        pJS.fn.vendors.drawShape(pJS.canvas.ctx, p.x-radius, p.y+radius / 1.66, radius*2, 3, 2);\n      break;\n\n      case 'polygon':\n        pJS.fn.vendors.drawShape(\n          pJS.canvas.ctx,\n          p.x - radius / (pJS.particles.shape.polygon.nb_sides/3.5), // startX\n          p.y - radius / (2.66/3.5), // startY\n          radius*2.66 / (pJS.particles.shape.polygon.nb_sides/3), // sideLength\n          pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\n          1 // sideCountDenominator\n        );\n      break;\n\n      case 'star':\n        pJS.fn.vendors.drawShape(\n          pJS.canvas.ctx,\n          p.x - radius*2 / (pJS.particles.shape.polygon.nb_sides/4), // startX\n          p.y - radius / (2*2.66/3.5), // startY\n          radius*2*2.66 / (pJS.particles.shape.polygon.nb_sides/3), // sideLength\n          pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\n          2 // sideCountDenominator\n        );\n      break;\n\n      case 'image':\n\n        function draw(){\n          pJS.canvas.ctx.drawImage(\n            img_obj,\n            p.x-radius,\n            p.y-radius,\n            radius*2,\n            radius*2 / p.img.ratio\n          );\n        }\n\n        if(pJS.tmp.img_type == 'svg'){\n          var img_obj = p.img.obj;\n        }else{\n          var img_obj = pJS.tmp.img_obj;\n        }\n\n        if(img_obj){\n          draw();\n        }\n\n      break;\n\n    }\n\n    pJS.canvas.ctx.closePath();\n\n    if(pJS.particles.shape.stroke.width > 0){\n      pJS.canvas.ctx.strokeStyle = pJS.particles.shape.stroke.color;\n      pJS.canvas.ctx.lineWidth = pJS.particles.shape.stroke.width;\n      pJS.canvas.ctx.stroke();\n    }\n    \n    pJS.canvas.ctx.fill();\n    \n  };\n\n\n  pJS.fn.particlesCreate = function(){\n    for(var i = 0; i < pJS.particles.number.value; i++) {\n      pJS.particles.array.push(new pJS.fn.particle(pJS.particles.color, pJS.particles.opacity.value));\n    }\n  };\n\n  pJS.fn.particlesUpdate = function(){\n\n    for(var i = 0; i < pJS.particles.array.length; i++){\n\n      /* the particle */\n      var p = pJS.particles.array[i];\n\n      // var d = ( dx = pJS.interactivity.mouse.click_pos_x - p.x ) * dx + ( dy = pJS.interactivity.mouse.click_pos_y - p.y ) * dy;\n      // var f = -BANG_SIZE / d;\n      // if ( d < BANG_SIZE ) {\n      //     var t = Math.atan2( dy, dx );\n      //     p.vx = f * Math.cos(t);\n      //     p.vy = f * Math.sin(t);\n      // }\n\n      /* move the particle */\n      if(pJS.particles.move.enable){\n        var ms = pJS.particles.move.speed/2;\n        p.x += p.vx * ms;\n        p.y += p.vy * ms;\n      }\n\n      /* change opacity status */\n      if(pJS.particles.opacity.anim.enable) {\n        if(p.opacity_status == true) {\n          if(p.opacity >= pJS.particles.opacity.value) p.opacity_status = false;\n          p.opacity += p.vo;\n        }else {\n          if(p.opacity <= pJS.particles.opacity.anim.opacity_min) p.opacity_status = true;\n          p.opacity -= p.vo;\n        }\n        if(p.opacity < 0) p.opacity = 0;\n      }\n\n      /* change size */\n      if(pJS.particles.size.anim.enable){\n        if(p.size_status == true){\n          if(p.radius >= pJS.particles.size.value) p.size_status = false;\n          p.radius += p.vs;\n        }else{\n          if(p.radius <= pJS.particles.size.anim.size_min) p.size_status = true;\n          p.radius -= p.vs;\n        }\n        if(p.radius < 0) p.radius = 0;\n      }\n\n      /* change particle position if it is out of canvas */\n      if(pJS.particles.move.out_mode == 'bounce'){\n        var new_pos = {\n          x_left: p.radius,\n          x_right:  pJS.canvas.w,\n          y_top: p.radius,\n          y_bottom: pJS.canvas.h\n        }\n      }else{\n        var new_pos = {\n          x_left: -p.radius,\n          x_right: pJS.canvas.w + p.radius,\n          y_top: -p.radius,\n          y_bottom: pJS.canvas.h + p.radius\n        }\n      }\n\n      if(p.x - p.radius > pJS.canvas.w){\n        p.x = new_pos.x_left;\n        p.y = Math.random() * pJS.canvas.h;\n      }\n      else if(p.x + p.radius < 0){\n        p.x = new_pos.x_right;\n        p.y = Math.random() * pJS.canvas.h;\n      }\n      if(p.y - p.radius > pJS.canvas.h){\n        p.y = new_pos.y_top;\n        p.x = Math.random() * pJS.canvas.w;\n      }\n      else if(p.y + p.radius < 0){\n        p.y = new_pos.y_bottom;\n        p.x = Math.random() * pJS.canvas.w;\n      }\n\n      /* out of canvas modes */\n      switch(pJS.particles.move.out_mode){\n        case 'bounce':\n          if (p.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\n          else if (p.x - p.radius < 0) p.vx = -p.vx;\n          if (p.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\n          else if (p.y - p.radius < 0) p.vy = -p.vy;\n        break;\n      }\n\n      /* events */\n      if(isInArray('grab', pJS.interactivity.events.onhover.mode)){\n        pJS.fn.modes.grabParticle(p);\n      }\n\n      if(isInArray('bubble', pJS.interactivity.events.onhover.mode) || isInArray('bubble', pJS.interactivity.events.onclick.mode)){\n        pJS.fn.modes.bubbleParticle(p);\n      }\n\n      if(isInArray('repulse', pJS.interactivity.events.onhover.mode) || isInArray('repulse', pJS.interactivity.events.onclick.mode)){\n        pJS.fn.modes.repulseParticle(p);\n      }\n\n      /* interaction auto between particles */\n      if(pJS.particles.line_linked.enable || pJS.particles.move.attract.enable){\n        for(var j = i + 1; j < pJS.particles.array.length; j++){\n          var p2 = pJS.particles.array[j];\n\n          /* link particles */\n          if(pJS.particles.line_linked.enable){\n            pJS.fn.interact.linkParticles(p,p2);\n          }\n\n          /* attract particles */\n          if(pJS.particles.move.attract.enable){\n            pJS.fn.interact.attractParticles(p,p2);\n          }\n\n          /* bounce particles */\n          if(pJS.particles.move.bounce){\n            pJS.fn.interact.bounceParticles(p,p2);\n          }\n\n        }\n      }\n\n\n    }\n\n  };\n\n  pJS.fn.particlesDraw = function(){\n\n    /* clear canvas */\n    pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\n\n    /* update each particles param */\n    pJS.fn.particlesUpdate();\n\n    /* draw each particle */\n    for(var i = 0; i < pJS.particles.array.length; i++){\n      var p = pJS.particles.array[i];\n      p.draw();\n    }\n\n  };\n\n  pJS.fn.particlesEmpty = function(){\n    pJS.particles.array = [];\n  };\n\n  pJS.fn.particlesRefresh = function(){\n\n    /* init all */\n    cancelRequestAnimFrame(pJS.fn.checkAnimFrame);\n    cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n    pJS.tmp.source_svg = undefined;\n    pJS.tmp.img_obj = undefined;\n    pJS.tmp.count_svg = 0;\n    pJS.fn.particlesEmpty();\n    pJS.fn.canvasClear();\n    \n    /* restart */\n    pJS.fn.vendors.start();\n\n  };\n\n\n  /* ---------- pJS functions - particles interaction ------------ */\n\n  pJS.fn.interact.linkParticles = function(p1, p2){\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy);\n\n    /* draw a line between p1 and p2 if the distance between them is under the config distance */\n    if(dist <= pJS.particles.line_linked.distance){\n\n      var opacity_line = pJS.particles.line_linked.opacity - (dist / (1/pJS.particles.line_linked.opacity)) / pJS.particles.line_linked.distance;\n\n      if(opacity_line > 0){        \n        \n        /* style */\n        var color_line = pJS.particles.line_linked.color_rgb_line;\n        pJS.canvas.ctx.strokeStyle = 'rgba('+color_line.r+','+color_line.g+','+color_line.b+','+opacity_line+')';\n        pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\n        //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\n        \n        /* path */\n        pJS.canvas.ctx.beginPath();\n        pJS.canvas.ctx.moveTo(p1.x, p1.y);\n        pJS.canvas.ctx.lineTo(p2.x, p2.y);\n        pJS.canvas.ctx.stroke();\n        pJS.canvas.ctx.closePath();\n\n      }\n\n    }\n\n  };\n\n\n  pJS.fn.interact.attractParticles  = function(p1, p2){\n\n    /* condensed particles */\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy);\n\n    if(dist <= pJS.particles.line_linked.distance){\n\n      var ax = dx/(pJS.particles.move.attract.rotateX*1000),\n          ay = dy/(pJS.particles.move.attract.rotateY*1000);\n\n      p1.vx -= ax;\n      p1.vy -= ay;\n\n      p2.vx += ax;\n      p2.vy += ay;\n\n    }\n    \n\n  }\n\n\n  pJS.fn.interact.bounceParticles = function(p1, p2){\n\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y,\n        dist = Math.sqrt(dx*dx + dy*dy),\n        dist_p = p1.radius+p2.radius;\n\n    if(dist <= dist_p){\n      p1.vx = -p1.vx;\n      p1.vy = -p1.vy;\n\n      p2.vx = -p2.vx;\n      p2.vy = -p2.vy;\n    }\n\n  }\n\n\n  /* ---------- pJS functions - modes events ------------ */\n\n  pJS.fn.modes.pushParticles = function(nb, pos){\n\n    pJS.tmp.pushing = true;\n\n    for(var i = 0; i < nb; i++){\n      pJS.particles.array.push(\n        new pJS.fn.particle(\n          pJS.particles.color,\n          pJS.particles.opacity.value,\n          {\n            'x': pos ? pos.pos_x : Math.random() * pJS.canvas.w,\n            'y': pos ? pos.pos_y : Math.random() * pJS.canvas.h\n          }\n        )\n      )\n      if(i == nb-1){\n        if(!pJS.particles.move.enable){\n          pJS.fn.particlesDraw();\n        }\n        pJS.tmp.pushing = false;\n      }\n    }\n\n  };\n\n\n  pJS.fn.modes.removeParticles = function(nb){\n\n    pJS.particles.array.splice(0, nb);\n    if(!pJS.particles.move.enable){\n      pJS.fn.particlesDraw();\n    }\n\n  };\n\n\n  pJS.fn.modes.bubbleParticle = function(p){\n\n    /* on hover event */\n    if(pJS.interactivity.events.onhover.enable && isInArray('bubble', pJS.interactivity.events.onhover.mode)){\n\n      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse),\n          ratio = 1 - dist_mouse / pJS.interactivity.modes.bubble.distance;\n\n      function init(){\n        p.opacity_bubble = p.opacity;\n        p.radius_bubble = p.radius;\n      }\n\n      /* mousemove - check ratio */\n      if(dist_mouse <= pJS.interactivity.modes.bubble.distance){\n\n        if(ratio >= 0 && pJS.interactivity.status == 'mousemove'){\n          \n          /* size */\n          if(pJS.interactivity.modes.bubble.size != pJS.particles.size.value){\n\n            if(pJS.interactivity.modes.bubble.size > pJS.particles.size.value){\n              var size = p.radius + (pJS.interactivity.modes.bubble.size*ratio);\n              if(size >= 0){\n                p.radius_bubble = size;\n              }\n            }else{\n              var dif = p.radius - pJS.interactivity.modes.bubble.size,\n                  size = p.radius - (dif*ratio);\n              if(size > 0){\n                p.radius_bubble = size;\n              }else{\n                p.radius_bubble = 0;\n              }\n            }\n\n          }\n\n          /* opacity */\n          if(pJS.interactivity.modes.bubble.opacity != pJS.particles.opacity.value){\n\n            if(pJS.interactivity.modes.bubble.opacity > pJS.particles.opacity.value){\n              var opacity = pJS.interactivity.modes.bubble.opacity*ratio;\n              if(opacity > p.opacity && opacity <= pJS.interactivity.modes.bubble.opacity){\n                p.opacity_bubble = opacity;\n              }\n            }else{\n              var opacity = p.opacity - (pJS.particles.opacity.value-pJS.interactivity.modes.bubble.opacity)*ratio;\n              if(opacity < p.opacity && opacity >= pJS.interactivity.modes.bubble.opacity){\n                p.opacity_bubble = opacity;\n              }\n            }\n\n          }\n\n        }\n\n      }else{\n        init();\n      }\n\n\n      /* mouseleave */\n      if(pJS.interactivity.status == 'mouseleave'){\n        init();\n      }\n    \n    }\n\n    /* on click event */\n    else if(pJS.interactivity.events.onclick.enable && isInArray('bubble', pJS.interactivity.events.onclick.mode)){\n\n\n      if(pJS.tmp.bubble_clicking){\n        var dx_mouse = p.x - pJS.interactivity.mouse.click_pos_x,\n            dy_mouse = p.y - pJS.interactivity.mouse.click_pos_y,\n            dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse),\n            time_spent = (new Date().getTime() - pJS.interactivity.mouse.click_time)/1000;\n\n        if(time_spent > pJS.interactivity.modes.bubble.duration){\n          pJS.tmp.bubble_duration_end = true;\n        }\n\n        if(time_spent > pJS.interactivity.modes.bubble.duration*2){\n          pJS.tmp.bubble_clicking = false;\n          pJS.tmp.bubble_duration_end = false;\n        }\n      }\n\n\n      function process(bubble_param, particles_param, p_obj_bubble, p_obj, id){\n\n        if(bubble_param != particles_param){\n\n          if(!pJS.tmp.bubble_duration_end){\n            if(dist_mouse <= pJS.interactivity.modes.bubble.distance){\n              if(p_obj_bubble != undefined) var obj = p_obj_bubble;\n              else var obj = p_obj;\n              if(obj != bubble_param){\n                var value = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration);\n                if(id == 'size') p.radius_bubble = value;\n                if(id == 'opacity') p.opacity_bubble = value;\n              }\n            }else{\n              if(id == 'size') p.radius_bubble = undefined;\n              if(id == 'opacity') p.opacity_bubble = undefined;\n            }\n          }else{\n            if(p_obj_bubble != undefined){\n              var value_tmp = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration),\n                  dif = bubble_param - value_tmp;\n                  value = bubble_param + dif;\n              if(id == 'size') p.radius_bubble = value;\n              if(id == 'opacity') p.opacity_bubble = value;\n            }\n          }\n\n        }\n\n      }\n\n      if(pJS.tmp.bubble_clicking){\n        /* size */\n        process(pJS.interactivity.modes.bubble.size, pJS.particles.size.value, p.radius_bubble, p.radius, 'size');\n        /* opacity */\n        process(pJS.interactivity.modes.bubble.opacity, pJS.particles.opacity.value, p.opacity_bubble, p.opacity, 'opacity');\n      }\n\n    }\n\n  };\n\n\n  pJS.fn.modes.repulseParticle = function(p){\n\n    if(pJS.interactivity.events.onhover.enable && isInArray('repulse', pJS.interactivity.events.onhover.mode) && pJS.interactivity.status == 'mousemove') {\n\n      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse);\n\n      var normVec = {x: dx_mouse/dist_mouse, y: dy_mouse/dist_mouse},\n          repulseRadius = pJS.interactivity.modes.repulse.distance,\n          velocity = 100,\n          repulseFactor = clamp((1/repulseRadius)*(-1*Math.pow(dist_mouse/repulseRadius,2)+1)*repulseRadius*velocity, 0, 50);\n      \n      var pos = {\n        x: p.x + normVec.x * repulseFactor,\n        y: p.y + normVec.y * repulseFactor\n      }\n\n      if(pJS.particles.move.out_mode == 'bounce'){\n        if(pos.x - p.radius > 0 && pos.x + p.radius < pJS.canvas.w) p.x = pos.x;\n        if(pos.y - p.radius > 0 && pos.y + p.radius < pJS.canvas.h) p.y = pos.y;\n      }else{\n        p.x = pos.x;\n        p.y = pos.y;\n      }\n    \n    }\n\n\n    else if(pJS.interactivity.events.onclick.enable && isInArray('repulse', pJS.interactivity.events.onclick.mode)) {\n\n      if(!pJS.tmp.repulse_finish){\n        pJS.tmp.repulse_count++;\n        if(pJS.tmp.repulse_count == pJS.particles.array.length){\n          pJS.tmp.repulse_finish = true;\n        }\n      }\n\n      if(pJS.tmp.repulse_clicking){\n\n        var repulseRadius = Math.pow(pJS.interactivity.modes.repulse.distance/6, 3);\n\n        var dx = pJS.interactivity.mouse.click_pos_x - p.x,\n            dy = pJS.interactivity.mouse.click_pos_y - p.y,\n            d = dx*dx + dy*dy;\n\n        var force = -repulseRadius / d * 1;\n\n        function process(){\n\n          var f = Math.atan2(dy,dx);\n          p.vx = force * Math.cos(f);\n          p.vy = force * Math.sin(f);\n\n          if(pJS.particles.move.out_mode == 'bounce'){\n            var pos = {\n              x: p.x + p.vx,\n              y: p.y + p.vy\n            }\n            if (pos.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\n            else if (pos.x - p.radius < 0) p.vx = -p.vx;\n            if (pos.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\n            else if (pos.y - p.radius < 0) p.vy = -p.vy;\n          }\n\n        }\n\n        // default\n        if(d <= repulseRadius){\n          process();\n        }\n\n        // bang - slow motion mode\n        // if(!pJS.tmp.repulse_finish){\n        //   if(d <= repulseRadius){\n        //     process();\n        //   }\n        // }else{\n        //   process();\n        // }\n        \n\n      }else{\n\n        if(pJS.tmp.repulse_clicking == false){\n\n          p.vx = p.vx_i;\n          p.vy = p.vy_i;\n        \n        }\n\n      }\n\n    }\n\n  }\n\n\n  pJS.fn.modes.grabParticle = function(p){\n\n    if(pJS.interactivity.events.onhover.enable && pJS.interactivity.status == 'mousemove'){\n\n      var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\n          dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\n          dist_mouse = Math.sqrt(dx_mouse*dx_mouse + dy_mouse*dy_mouse);\n\n      /* draw a line between the cursor and the particle if the distance between them is under the config distance */\n      if(dist_mouse <= pJS.interactivity.modes.grab.distance){\n\n        var opacity_line = pJS.interactivity.modes.grab.line_linked.opacity - (dist_mouse / (1/pJS.interactivity.modes.grab.line_linked.opacity)) / pJS.interactivity.modes.grab.distance;\n\n        if(opacity_line > 0){\n\n          /* style */\n          var color_line = pJS.particles.line_linked.color_rgb_line;\n          pJS.canvas.ctx.strokeStyle = 'rgba('+color_line.r+','+color_line.g+','+color_line.b+','+opacity_line+')';\n          pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\n          //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\n          \n          /* path */\n          pJS.canvas.ctx.beginPath();\n          pJS.canvas.ctx.moveTo(p.x, p.y);\n          pJS.canvas.ctx.lineTo(pJS.interactivity.mouse.pos_x, pJS.interactivity.mouse.pos_y);\n          pJS.canvas.ctx.stroke();\n          pJS.canvas.ctx.closePath();\n\n        }\n\n      }\n\n    }\n\n  };\n\n\n\n  /* ---------- pJS functions - vendors ------------ */\n\n  pJS.fn.vendors.eventsListeners = function(){\n\n    /* events target element */\n    if(pJS.interactivity.detect_on == 'window'){\n      pJS.interactivity.el = window;\n    }else{\n      pJS.interactivity.el = pJS.canvas.el;\n    }\n\n\n    /* detect mouse pos - on hover / click event */\n    if(pJS.interactivity.events.onhover.enable || pJS.interactivity.events.onclick.enable){\n\n      /* el on mousemove */\n      pJS.interactivity.el.addEventListener('mousemove', function(e){\n\n        if(pJS.interactivity.el == window){\n          var pos_x = e.clientX,\n              pos_y = e.clientY;\n        }\n        else{\n          var pos_x = e.offsetX || e.clientX,\n              pos_y = e.offsetY || e.clientY;\n        }\n\n        pJS.interactivity.mouse.pos_x = pos_x;\n        pJS.interactivity.mouse.pos_y = pos_y;\n\n        if(pJS.tmp.retina){\n          pJS.interactivity.mouse.pos_x *= pJS.canvas.pxratio;\n          pJS.interactivity.mouse.pos_y *= pJS.canvas.pxratio;\n        }\n\n        pJS.interactivity.status = 'mousemove';\n\n      });\n\n      /* el on onmouseleave */\n      pJS.interactivity.el.addEventListener('mouseleave', function(e){\n\n        pJS.interactivity.mouse.pos_x = null;\n        pJS.interactivity.mouse.pos_y = null;\n        pJS.interactivity.status = 'mouseleave';\n\n      });\n\n    }\n\n    /* on click event */\n    if(pJS.interactivity.events.onclick.enable){\n\n      pJS.interactivity.el.addEventListener('click', function(){\n\n        pJS.interactivity.mouse.click_pos_x = pJS.interactivity.mouse.pos_x;\n        pJS.interactivity.mouse.click_pos_y = pJS.interactivity.mouse.pos_y;\n        pJS.interactivity.mouse.click_time = new Date().getTime();\n\n        if(pJS.interactivity.events.onclick.enable){\n\n          switch(pJS.interactivity.events.onclick.mode){\n\n            case 'push':\n              if(pJS.particles.move.enable){\n                pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\n              }else{\n                if(pJS.interactivity.modes.push.particles_nb == 1){\n                  pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\n                }\n                else if(pJS.interactivity.modes.push.particles_nb > 1){\n                  pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb);\n                }\n              }\n            break;\n\n            case 'remove':\n              pJS.fn.modes.removeParticles(pJS.interactivity.modes.remove.particles_nb);\n            break;\n\n            case 'bubble':\n              pJS.tmp.bubble_clicking = true;\n            break;\n\n            case 'repulse':\n              pJS.tmp.repulse_clicking = true;\n              pJS.tmp.repulse_count = 0;\n              pJS.tmp.repulse_finish = false;\n              setTimeout(function(){\n                pJS.tmp.repulse_clicking = false;\n              }, pJS.interactivity.modes.repulse.duration*1000)\n            break;\n\n          }\n\n        }\n\n      });\n        \n    }\n\n\n  };\n\n  pJS.fn.vendors.densityAutoParticles = function(){\n\n    if(pJS.particles.number.density.enable){\n\n      /* calc area */\n      var area = pJS.canvas.el.width * pJS.canvas.el.height / 1000;\n      if(pJS.tmp.retina){\n        area = area/(pJS.canvas.pxratio*2);\n      }\n\n      /* calc number of particles based on density area */\n      var nb_particles = area * pJS.particles.number.value / pJS.particles.number.density.value_area;\n\n      /* add or remove X particles */\n      var missing_particles = pJS.particles.array.length - nb_particles;\n      if(missing_particles < 0) pJS.fn.modes.pushParticles(Math.abs(missing_particles));\n      else pJS.fn.modes.removeParticles(missing_particles);\n\n    }\n\n  };\n\n\n  pJS.fn.vendors.checkOverlap = function(p1, position){\n    for(var i = 0; i < pJS.particles.array.length; i++){\n      var p2 = pJS.particles.array[i];\n\n      var dx = p1.x - p2.x,\n          dy = p1.y - p2.y,\n          dist = Math.sqrt(dx*dx + dy*dy);\n\n      if(dist <= p1.radius + p2.radius){\n        p1.x = position ? position.x : Math.random() * pJS.canvas.w;\n        p1.y = position ? position.y : Math.random() * pJS.canvas.h;\n        pJS.fn.vendors.checkOverlap(p1);\n      }\n    }\n  };\n\n\n  pJS.fn.vendors.createSvgImg = function(p){\n\n    /* set color to svg element */\n    var svgXml = pJS.tmp.source_svg,\n        rgbHex = /#([0-9A-F]{3,6})/gi,\n        coloredSvgXml = svgXml.replace(rgbHex, function (m, r, g, b) {\n          if(p.color.rgb){\n            var color_value = 'rgba('+p.color.rgb.r+','+p.color.rgb.g+','+p.color.rgb.b+','+p.opacity+')';\n          }else{\n            var color_value = 'hsla('+p.color.hsl.h+','+p.color.hsl.s+'%,'+p.color.hsl.l+'%,'+p.opacity+')';\n          }\n          return color_value;\n        });\n\n    /* prepare to create img with colored svg */\n    var svg = new Blob([coloredSvgXml], {type: 'image/svg+xml;charset=utf-8'}),\n        DOMURL = window.URL || window.webkitURL || window,\n        url = DOMURL.createObjectURL(svg);\n\n    /* create particle img obj */\n    var img = new Image();\n    img.addEventListener('load', function(){\n      p.img.obj = img;\n      p.img.loaded = true;\n      DOMURL.revokeObjectURL(url);\n      pJS.tmp.count_svg++;\n    });\n    img.src = url;\n\n  };\n\n\n  pJS.fn.vendors.destroypJS = function(){\n    cancelAnimationFrame(pJS.fn.drawAnimFrame);\n    canvas_el.remove();\n    pJSDom = null;\n  };\n\n\n  pJS.fn.vendors.drawShape = function(c, startX, startY, sideLength, sideCountNumerator, sideCountDenominator){\n\n    // By Programming Thomas - https://programmingthomas.wordpress.com/2013/04/03/n-sided-shapes/\n    var sideCount = sideCountNumerator * sideCountDenominator;\n    var decimalSides = sideCountNumerator / sideCountDenominator;\n    var interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n    var interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180; // convert to radians\n    c.save();\n    c.beginPath();\n    c.translate(startX, startY);\n    c.moveTo(0,0);\n    for (var i = 0; i < sideCount; i++) {\n      c.lineTo(sideLength,0);\n      c.translate(sideLength,0);\n      c.rotate(interiorAngle);\n    }\n    //c.stroke();\n    c.fill();\n    c.restore();\n\n  };\n\n  pJS.fn.vendors.exportImg = function(){\n    window.open(pJS.canvas.el.toDataURL('image/png'), '_blank');\n  };\n\n\n  pJS.fn.vendors.loadImg = function(type){\n\n    pJS.tmp.img_error = undefined;\n\n    if(pJS.particles.shape.image.src != ''){\n\n      if(type == 'svg'){\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', pJS.particles.shape.image.src);\n        xhr.onreadystatechange = function (data) {\n          if(xhr.readyState == 4){\n            if(xhr.status == 200){\n              pJS.tmp.source_svg = data.currentTarget.response;\n              pJS.fn.vendors.checkBeforeDraw();\n            }else{\n              console.log('Error pJS - Image not found');\n              pJS.tmp.img_error = true;\n            }\n          }\n        }\n        xhr.send();\n\n      }else{\n\n        var img = new Image();\n        img.addEventListener('load', function(){\n          pJS.tmp.img_obj = img;\n          pJS.fn.vendors.checkBeforeDraw();\n        });\n        img.src = pJS.particles.shape.image.src;\n\n      }\n\n    }else{\n      console.log('Error pJS - No image.src');\n      pJS.tmp.img_error = true;\n    }\n\n  };\n\n\n  pJS.fn.vendors.draw = function(){\n\n    if(pJS.particles.shape.type == 'image'){\n\n      if(pJS.tmp.img_type == 'svg'){\n\n        if(pJS.tmp.count_svg >= pJS.particles.number.value){\n          pJS.fn.particlesDraw();\n          if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n          else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }else{\n          //console.log('still loading...');\n          if(!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }\n\n      }else{\n\n        if(pJS.tmp.img_obj != undefined){\n          pJS.fn.particlesDraw();\n          if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n          else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }else{\n          if(!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n        }\n\n      }\n\n    }else{\n      pJS.fn.particlesDraw();\n      if(!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\n      else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\n    }\n\n  };\n\n\n  pJS.fn.vendors.checkBeforeDraw = function(){\n\n    // if shape is image\n    if(pJS.particles.shape.type == 'image'){\n\n      if(pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg == undefined){\n        pJS.tmp.checkAnimFrame = requestAnimFrame(check);\n      }else{\n        //console.log('images loaded! cancel check');\n        cancelRequestAnimFrame(pJS.tmp.checkAnimFrame);\n        if(!pJS.tmp.img_error){\n          pJS.fn.vendors.init();\n          pJS.fn.vendors.draw();\n        }\n        \n      }\n\n    }else{\n      pJS.fn.vendors.init();\n      pJS.fn.vendors.draw();\n    }\n\n  };\n\n\n  pJS.fn.vendors.init = function(){\n\n    /* init canvas + particles */\n    pJS.fn.retinaInit();\n    pJS.fn.canvasInit();\n    pJS.fn.canvasSize();\n    pJS.fn.canvasPaint();\n    pJS.fn.particlesCreate();\n    pJS.fn.vendors.densityAutoParticles();\n\n    /* particles.line_linked - convert hex colors to rgb */\n    pJS.particles.line_linked.color_rgb_line = hexToRgb(pJS.particles.line_linked.color);\n\n  };\n\n\n  pJS.fn.vendors.start = function(){\n\n    if(isInArray('image', pJS.particles.shape.type)){\n      pJS.tmp.img_type = pJS.particles.shape.image.src.substr(pJS.particles.shape.image.src.length - 3);\n      pJS.fn.vendors.loadImg(pJS.tmp.img_type);\n    }else{\n      pJS.fn.vendors.checkBeforeDraw();\n    }\n\n  };\n\n\n\n\n  /* ---------- pJS - start ------------ */\n\n\n  pJS.fn.vendors.eventsListeners();\n\n  pJS.fn.vendors.start();\n  \n\n\n};\n\n/* ---------- global functions - vendors ------------ */\n\nObject.deepExtend = function(destination, source) {\n  for (var property in source) {\n    if (source[property] && source[property].constructor &&\n     source[property].constructor === Object) {\n      destination[property] = destination[property] || {};\n      arguments.callee(destination[property], source[property]);\n    } else {\n      destination[property] = source[property];\n    }\n  }\n  return destination;\n};\n\nwindow.requestAnimFrame = (function(){\n  return  window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame    ||\n    window.oRequestAnimationFrame      ||\n    window.msRequestAnimationFrame     ||\n    function(callback){\n      window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nwindow.cancelRequestAnimFrame = ( function() {\n  return window.cancelAnimationFrame         ||\n    window.webkitCancelRequestAnimationFrame ||\n    window.mozCancelRequestAnimationFrame    ||\n    window.oCancelRequestAnimationFrame      ||\n    window.msCancelRequestAnimationFrame     ||\n    clearTimeout\n} )();\n\nfunction hexToRgb(hex){\n  // By Tim Down - http://stackoverflow.com/a/5624139/3493650\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n     return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n  } : null;\n};\n\nfunction clamp(number, min, max) {\n  return Math.min(Math.max(number, min), max);\n};\n\nfunction isInArray(value, array) {\n  return array.indexOf(value) > -1;\n}\n\n\n/* ---------- particles.js functions - start ------------ */\n\nwindow.pJSDom = [];\n\nwindow.particlesJS = function(tag_id, params){\n\n  //console.log(params);\n\n  /* no string id? so it's object params, and set the id with default id */\n  if(typeof(tag_id) != 'string'){\n    params = tag_id;\n    tag_id = 'particles-js';\n  }\n\n  /* no id? set the id to default id */\n  if(!tag_id){\n    tag_id = 'particles-js';\n  }\n\n  /* pJS elements */\n  var pJS_tag = document.getElementById(tag_id),\n      pJS_canvas_class = 'particles-js-canvas-el',\n      exist_canvas = pJS_tag.getElementsByClassName(pJS_canvas_class);\n\n  /* remove canvas if exists into the pJS target tag */\n  if(exist_canvas.length){\n    while(exist_canvas.length > 0){\n      pJS_tag.removeChild(exist_canvas[0]);\n    }\n  }\n\n  /* create canvas element */\n  var canvas_el = document.createElement('canvas');\n  canvas_el.className = pJS_canvas_class;\n\n  /* set size canvas */\n  canvas_el.style.width = \"100%\";\n  canvas_el.style.height = \"100%\";\n\n  /* append canvas */\n  var canvas = document.getElementById(tag_id).appendChild(canvas_el);\n\n  /* launch particle.js */\n  if(canvas != null){\n    pJSDom.push(new pJS(tag_id, params));\n  }\n\n};\n\nwindow.particlesJS.load = function(tag_id, path_config_json, callback){\n\n  /* load json config */\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', path_config_json);\n  xhr.onreadystatechange = function (data) {\n    if(xhr.readyState == 4){\n      if(xhr.status == 200){\n        var params = JSON.parse(data.currentTarget.response);\n        window.particlesJS(tag_id, params);\n        if(callback) callback();\n      }else{\n        console.log('Error pJS - XMLHttpRequest status: '+xhr.status);\n        console.log('Error pJS - File config not found');\n      }\n    }\n  };\n  xhr.send();\n\n};","/*! svg.easing.js - v2.0.0 - 2016-04-25\r\n* https://github.com/wout/svg.easing.js\r\n* Copyright (c) 2016 Wout Fierens; Licensed MIT */\r\n// Based on Easing Equations (c) 2003 [Robert Penner](http://www.robertpenner.com/), all rights reserved.\r\n\r\n(function() {\r\n    var easing = {\r\n\r\n        quadIn: function(pos) {\r\n            return Math.pow(pos, 2)\r\n        }\r\n\r\n    , quadOut: function(pos) {\r\n        return -(Math.pow((pos - 1), 2) - 1)\r\n    }\r\n\r\n    , quadInOut: function(pos) {\r\n        if ((pos /= 0.5) < 1) return 0.5 * Math.pow(pos, 2)\r\n        return -0.5 * ((pos -= 2) * pos - 2)\r\n    }\r\n\r\n    , cubicIn: function(pos) {\r\n        return Math.pow(pos, 3)\r\n    }\r\n\r\n    , cubicOut: function(pos) {\r\n        return (Math.pow((pos - 1), 3) + 1)\r\n    }\r\n\r\n    , cubicInOut: function(pos) {\r\n        if ((pos /= 0.5) < 1) return 0.5 * Math.pow(pos,3)\r\n        return 0.5 * (Math.pow((pos - 2), 3) + 2)\r\n    }\r\n\r\n    , quartIn: function(pos) {\r\n        return Math.pow(pos, 4)\r\n    }\r\n\r\n    , quartOut: function(pos) {\r\n        return -(Math.pow((pos-1), 4) -1)\r\n    }\r\n\r\n    , quartInOut: function(pos) {\r\n        if ((pos /= 0.5) < 1) return 0.5 * Math.pow(pos, 4)\r\n        return -0.5 * ((pos -= 2) * Math.pow(pos, 3) - 2)\r\n    }\r\n\r\n    , quintIn: function(pos) {\r\n        return Math.pow(pos, 5)\r\n    }\r\n\r\n    , quintOut: function(pos) {\r\n        return (Math.pow((pos-1), 5) +1)\r\n    }\r\n\r\n    , quintInOut: function(pos) {\r\n        if ((pos /= 0.5) < 1) return 0.5 * Math.pow(pos, 5)\r\n        return 0.5 * (Math.pow((pos - 2), 5) + 2)\r\n    }\r\n\r\n    , sineIn: function(pos) {\r\n        return -Math.cos(pos * (Math.PI / 2)) + 1\r\n    }\r\n\r\n    , sineOut: function(pos) {\r\n        return Math.sin(pos * (Math.PI / 2))\r\n    }\r\n\r\n    , sineInOut: function(pos) {\r\n        return (-.5 * (Math.cos(Math.PI * pos) -1))\r\n    }\r\n\r\n    , expoIn: function(pos) {\r\n        return (pos==0) ? 0 : Math.pow(2, 10 * (pos - 1))\r\n    }\r\n\r\n    , expoOut: function(pos) {\r\n        return (pos==1) ? 1 : -Math.pow(2, -10 * pos) + 1\r\n    }\r\n\r\n    , expoInOut: function(pos) {\r\n        if(pos==0) return 0\r\n        if(pos==1) return 1\r\n        if((pos/=0.5) < 1) return 0.5 * Math.pow(2,10 * (pos-1))\r\n        return 0.5 * (-Math.pow(2, -10 * --pos) + 2)\r\n    }\r\n\r\n    , circIn: function(pos) {\r\n        return -(Math.sqrt(1 - (pos*pos)) - 1)\r\n    }\r\n\r\n    , circOut: function(pos) {\r\n        return Math.sqrt(1 - Math.pow((pos-1), 2))\r\n    }\r\n\r\n    , circInOut: function(pos) {\r\n        if((pos/=0.5) < 1) return -0.5 * (Math.sqrt(1 - pos*pos) - 1)\r\n        return 0.5 * (Math.sqrt(1 - (pos-=2)*pos) + 1)\r\n    }\r\n\r\n    , backIn: function (pos) {\r\n        var s = 1.70158\r\n        return pos * pos * ((s + 1) * pos - s)\r\n    }\r\n\r\n    , backOut: function (pos) {\r\n        pos = pos - 1\r\n        var s = 1.70158\r\n        return pos * pos * ((s + 1) * pos + s) + 1\r\n    }\r\n\r\n    , backInOut: function (pos) {\r\n        var s = 1.70158\r\n        if((pos/=0.5) < 1) return 0.5*(pos*pos*(((s*=(1.525))+1)*pos -s))\r\n        return 0.5*((pos-=2)*pos*(((s*=(1.525))+1)*pos +s) +2)\r\n    }\r\n\r\n    , swingFromTo: function(pos) {\r\n        var s = 1.70158\r\n        return ((pos/=0.5) < 1) ? 0.5*(pos*pos*(((s*=(1.525))+1)*pos - s)) :\r\n        0.5*((pos-=2)*pos*(((s*=(1.525))+1)*pos + s) + 2)\r\n    }\r\n\r\n    , swingFrom: function(pos) {\r\n        var s = 1.70158\r\n        return pos*pos*((s+1)*pos - s)\r\n    }\r\n\r\n    , swingTo: function(pos) {\r\n        var s = 1.70158\r\n        return (pos-=1)*pos*((s+1)*pos + s) + 1\r\n    }\r\n\r\n    , bounce: function(pos) {\r\n        var s = 7.5625,\r\n            p = 2.75,\r\n            l\r\n\r\n        if (pos < (1 / p)) {\r\n            l = s * pos * pos\r\n        } else {\r\n            if (pos < (2 / p)) {\r\n                pos -= (1.5 / p)\r\n                l = s * pos * pos + .75\r\n            } else {\r\n                if (pos < (2.5 / p)) {\r\n                    pos -= (2.25 / p)\r\n                    l = s * pos * pos + .9375\r\n                } else {\r\n                    pos -= (2.625 / p)\r\n                    l = s * pos * pos + .984375\r\n                }\r\n            }\r\n        }\r\n        return l\r\n    }\r\n\r\n    , bounceOut: function(pos){\r\n        if ((pos) < (1/2.75)) {\r\n            return (7.5625*pos*pos)\r\n        } else if (pos < (2/2.75)) {\r\n            return (7.5625*(pos-=(1.5/2.75))*pos + .75)\r\n        } else if (pos < (2.5/2.75)) {\r\n            return (7.5625*(pos-=(2.25/2.75))*pos + .9375)\r\n        } else {\r\n            return (7.5625*(pos-=(2.625/2.75))*pos + .984375)\r\n        }\r\n    }\r\n\r\n    , elastic: function(pos) {\r\n        if (pos == !!pos) return pos\r\n        return Math.pow(2, -10 * pos) * Math.sin((pos - 0.075) * (2 * Math.PI) / .3) + 1\r\n    }\r\n\r\n    }\r\n\r\n    for (key in easing)\r\n        SVG.easing[key] = easing[key]\r\n})()\r\n","/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.6.6\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Thu Aug 30 2018 11:37:58 GMT+0200 (GMT+02:00)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// Find global reference - uses 'this' by default when available,\r\n// falls back to 'window' otherwise (for bundlers like Webpack)\r\nvar globalRef = (typeof this !== \"undefined\") ? this : window;\r\n\r\n// The main wrapping element\r\nvar SVG = globalRef.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        // make sure to use a clone\r\n        return array.map(function (el) { return el.slice() })\r\n      } else if (array[0].x != null){\r\n        // allow point objects to be passed\r\n        return array.map(function (el) { return [el.x, el.y] })\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(!parent.node.parentNode || parent.node.parentNode.nodeName == '#document') return null // #759, #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // check if we have a list of values\r\n    if(SVG.regex.delimiter.test(from)) {\r\n      // prepare path for morphing\r\n      if(SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to)\r\n      // prepare value list for morphing\r\n      else return new SVG.Array(from).morph(to)\r\n    }\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      // Construct the matrix directly, avoid values that are too small\r\n      return 'matrix(' + float32String(this.a) + ',' + float32String(this.b)\r\n        + ',' + float32String(this.c) + ',' + float32String(this.d)\r\n        + ',' + float32String(this.e) + ',' + float32String(this.f)\r\n        + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n;[  'click'\r\n  , 'dblclick'\r\n  , 'mousedown'\r\n  , 'mouseup'\r\n  , 'mouseover'\r\n  , 'mouseout'\r\n  , 'mousemove'\r\n  // , 'mouseenter' -> not supported by IE\r\n  // , 'mouseleave' -> not supported by IE\r\n  , 'touchstart'\r\n  , 'touchmove'\r\n  , 'touchleave'\r\n  , 'touchend'\r\n  , 'touchcancel' ].forEach(function(event) {\r\n\r\n  // add event to SVG.Element\r\n  SVG.Element.prototype[event] = function(f) {\r\n    // bind event to element rather than element node\r\n    SVG.on(this.node, event, f)\r\n    return this\r\n  }\r\n})\r\n\r\n// Initialize listeners stack\r\nSVG.listeners = []\r\nSVG.handlerMap = []\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function(node, event, listener, binding, options) {\r\n  // create listener, get object-index\r\n  var l     = listener.bind(binding || node.instance || node)\r\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n    , ev    = event.split('.')[0]\r\n    , ns    = event.split('.')[1] || '*'\r\n\r\n\r\n  // ensure valid object\r\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\r\n  if(!listener._svgjsListenerId)\r\n    listener._svgjsListenerId = ++SVG.listenerId\r\n\r\n  // reference listener\r\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\r\n\r\n  // add listener\r\n  node.addEventListener(ev, l, options || false)\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function(node, event, listener) {\r\n  var index = SVG.handlerMap.indexOf(node)\r\n    , ev    = event && event.split('.')[0]\r\n    , ns    = event && event.split('.')[1]\r\n    , namespace = ''\r\n\r\n  if(index == -1) return\r\n\r\n  if (listener) {\r\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\r\n    if(!listener) return\r\n\r\n    // remove listener reference\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n      // remove listener\r\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\r\n      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n    }\r\n\r\n  } else if (ns && ev) {\r\n    // remove all listeners for a namespaced event\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n      for (listener in SVG.listeners[index][ev][ns])\r\n        SVG.off(node, [ev, ns].join('.'), listener)\r\n\r\n      delete SVG.listeners[index][ev][ns]\r\n    }\r\n\r\n  } else if (ns){\r\n    // remove all listeners for a specific namespace\r\n    for(event in SVG.listeners[index]){\r\n        for(namespace in SVG.listeners[index][event]){\r\n            if(ns === namespace){\r\n                SVG.off(node, [event, ns].join('.'))\r\n            }\r\n        }\r\n    }\r\n\r\n  } else if (ev) {\r\n    // remove all listeners for the event\r\n    if (SVG.listeners[index][ev]) {\r\n      for (namespace in SVG.listeners[index][ev])\r\n        SVG.off(node, [ev, namespace].join('.'))\r\n\r\n      delete SVG.listeners[index][ev]\r\n    }\r\n\r\n  } else {\r\n    // remove all listeners on a given node\r\n    for (event in SVG.listeners[index])\r\n      SVG.off(node, event)\r\n\r\n    delete SVG.listeners[index]\r\n    delete SVG.handlerMap[index]\r\n\r\n  }\r\n}\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function(event, listener, binding, options) {\r\n    SVG.on(this.node, event, listener, binding, options)\r\n\r\n    return this\r\n  }\r\n  // Unbind event from listener\r\n, off: function(event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n\r\n    return this\r\n  }\r\n  // Fire given event\r\n, fire: function(event, data) {\r\n\r\n    // Dispatch event\r\n    if(event instanceof window.Event){\r\n        this.node.dispatchEvent(event)\r\n    }else{\r\n        this.node.dispatchEvent(event = new SVG.CustomEvent(event, {detail:data, cancelable: true}))\r\n    }\r\n\r\n    this._event = event\r\n    return this\r\n  }\r\n, event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      if(!this.node.parentNode || this.node.parentNode.nodeName == '#document') return null\r\n      return this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  , clone: function (parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // get reference to node\r\n      var node = this.node\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) {\r\n        (parent.node || parent).appendChild(clone.node)\r\n      } else {\r\n        node.parentNode.insertBefore(clone.node, node.nextSibling)\r\n      }\r\n\r\n      return clone\r\n    }\r\n  }\r\n\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      SVG.Element.prototype.remove.call(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y.valueOf() === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    // Set initial state\r\n    Array.isArray(members) ? this.members = members : this.clear()\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = (url || '').toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// If values like 1e-88 are passed, this is not a valid 32 bit float,\r\n// but in those cases, we are so close to 0 that 0 works well!\r\nfunction float32String(v) {\r\n  return Math.abs(v) > 1e-37 ? v : 0\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\r\n\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEventPoly = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEventPoly.prototype = window.Event.prototype\r\n\r\n  SVG.CustomEvent = CustomEventPoly\r\n} else {\r\n  SVG.CustomEvent = window.CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r","/**\n * vivus - JavaScript library to make drawing animation on SVG\n * @version v0.4.4\n * @link https://github.com/maxwellito/vivus\n * @license MIT\n */\n\n'use strict';\n\n(function () {\n\n  'use strict';\n\n/**\n * Pathformer\n * Beta version\n *\n * Take any SVG version 1.1 and transform\n * child elements to 'path' elements\n *\n * This code is purely forked from\n * https://github.com/Waest/SVGPathConverter\n */\n\n/**\n * Class constructor\n *\n * @param {DOM|String} element Dom element of the SVG or id of it\n */\nfunction Pathformer(element) {\n  // Test params\n  if (typeof element === 'undefined') {\n    throw new Error('Pathformer [constructor]: \"element\" parameter is required');\n  }\n\n  // Set the element\n  if (element.constructor === String) {\n    element = document.getElementById(element);\n    if (!element) {\n      throw new Error('Pathformer [constructor]: \"element\" parameter is not related to an existing ID');\n    }\n  }\n  if (element instanceof window.SVGElement || \n      element instanceof window.SVGGElement ||\n      /^svg$/i.test(element.nodeName)) {\n    this.el = element;\n  } else {\n    throw new Error('Pathformer [constructor]: \"element\" parameter must be a string or a SVGelement');\n  }\n\n  // Start\n  this.scan(element);\n}\n\n/**\n * List of tags which can be transformed\n * to path elements\n *\n * @type {Array}\n */\nPathformer.prototype.TYPES = ['line', 'ellipse', 'circle', 'polygon', 'polyline', 'rect'];\n\n/**\n * List of attribute names which contain\n * data. This array list them to check if\n * they contain bad values, like percentage.\n *\n * @type {Array}\n */\nPathformer.prototype.ATTR_WATCH = ['cx', 'cy', 'points', 'r', 'rx', 'ry', 'x', 'x1', 'x2', 'y', 'y1', 'y2'];\n\n/**\n * Finds the elements compatible for transform\n * and apply the liked method\n *\n * @param  {object} options Object from the constructor\n */\nPathformer.prototype.scan = function (svg) {\n  var fn, element, pathData, pathDom,\n      elements = svg.querySelectorAll(this.TYPES.join(','));\n\n  for (var i = 0; i < elements.length; i++) {\n    element = elements[i];\n    fn = this[element.tagName.toLowerCase() + 'ToPath'];\n    pathData = fn(this.parseAttr(element.attributes));\n    pathDom = this.pathMaker(element, pathData);\n    element.parentNode.replaceChild(pathDom, element);\n  }\n};\n\n\n/**\n * Read `line` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Line element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.lineToPath = function (element) {\n  var newElement = {},\n      x1 = element.x1 || 0,\n      y1 = element.y1 || 0,\n      x2 = element.x2 || 0,\n      y2 = element.y2 || 0;\n\n  newElement.d = 'M' + x1 + ',' + y1 + 'L' + x2 + ',' + y2;\n  return newElement;\n};\n\n/**\n * Read `rect` element to extract and transform\n * data, to make it ready for a `path` object.\n * The radius-border is not taken in charge yet.\n * (your help is more than welcomed)\n *\n * @param  {DOMelement} element Rect element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.rectToPath = function (element) {\n  var newElement = {},\n      x      = parseFloat(element.x)      || 0,\n      y      = parseFloat(element.y)      || 0,\n      width  = parseFloat(element.width)  || 0,\n      height = parseFloat(element.height) || 0;\n\n  if (element.rx || element.ry) {\n    var rx = parseInt(element.rx, 10) || -1,\n        ry = parseInt(element.ry, 10) || -1;\n    rx = Math.min(Math.max(rx < 0 ? ry : rx, 0), width/2);\n    ry = Math.min(Math.max(ry < 0 ? rx : ry, 0), height/2);\n\n    newElement.d = 'M ' + (x + rx) + ',' + y + ' ' +\n                   'L ' + (x + width - rx) + ',' + y + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + width) + ',' + (y + ry) + ' ' +\n                   'L ' + (x + width) + ',' + (y + height - ry) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + width - rx) + ',' + (y + height) + ' ' +\n                   'L ' + (x + rx) + ',' + (y + height) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + x + ',' + (y + height - ry) + ' ' +\n                   'L ' + x + ',' + (y + ry) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + rx) + ',' + y;\n  }\n  else {\n    newElement.d = 'M' + x + ' ' + y + ' ' +\n                   'L' + (x + width) + ' ' + y + ' ' +\n                   'L' + (x + width) + ' ' + (y + height) + ' ' +\n                   'L' + x + ' ' + (y + height) + ' Z';\n  }\n  return newElement;\n};\n\n/**\n * Read `polyline` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Polyline element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.polylineToPath = function (element) {\n  var newElement = {},\n      points = element.points.trim().split(' '),\n      i, path;\n\n  // Reformatting if points are defined without commas\n  if (element.points.indexOf(',') === -1) {\n    var formattedPoints = [];\n    for (i = 0; i < points.length; i+=2) {\n      formattedPoints.push(points[i] + ',' + points[i+1]);\n    }\n    points = formattedPoints;\n  }\n\n  // Generate the path.d value\n  path = 'M' + points[0];\n  for(i = 1; i < points.length; i++) {\n    if (points[i].indexOf(',') !== -1) {\n      path += 'L' + points[i];\n    }\n  }\n  newElement.d = path;\n  return newElement;\n};\n\n/**\n * Read `polygon` element to extract and transform\n * data, to make it ready for a `path` object.\n * This method rely on polylineToPath, because the\n * logic is similar. The path created is just closed,\n * so it needs an 'Z' at the end.\n *\n * @param  {DOMelement} element Polygon element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.polygonToPath = function (element) {\n  var newElement = Pathformer.prototype.polylineToPath(element);\n\n  newElement.d += 'Z';\n  return newElement;\n};\n\n/**\n * Read `ellipse` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element ellipse element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.ellipseToPath = function (element) {\n  var newElement = {},\n      rx = parseFloat(element.rx) || 0,\n      ry = parseFloat(element.ry) || 0,\n      cx = parseFloat(element.cx) || 0,\n      cy = parseFloat(element.cy) || 0,\n      startX = cx - rx,\n      startY = cy,\n      endX = parseFloat(cx) + parseFloat(rx),\n      endY = cy;\n\n  newElement.d = 'M' + startX + ',' + startY +\n                 'A' + rx + ',' + ry + ' 0,1,1 ' + endX + ',' + endY +\n                 'A' + rx + ',' + ry + ' 0,1,1 ' + startX + ',' + endY;\n  return newElement;\n};\n\n/**\n * Read `circle` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Circle element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.circleToPath = function (element) {\n  var newElement = {},\n      r  = parseFloat(element.r)  || 0,\n      cx = parseFloat(element.cx) || 0,\n      cy = parseFloat(element.cy) || 0,\n      startX = cx - r,\n      startY = cy,\n      endX = parseFloat(cx) + parseFloat(r),\n      endY = cy;\n      \n  newElement.d =  'M' + startX + ',' + startY +\n                  'A' + r + ',' + r + ' 0,1,1 ' + endX + ',' + endY +\n                  'A' + r + ',' + r + ' 0,1,1 ' + startX + ',' + endY;\n  return newElement;\n};\n\n/**\n * Create `path` elements form original element\n * and prepared objects\n *\n * @param  {DOMelement} element  Original element to transform\n * @param  {object} pathData     Path data (from `toPath` methods)\n * @return {DOMelement}          Path element\n */\nPathformer.prototype.pathMaker = function (element, pathData) {\n  var i, attr, pathTag = document.createElementNS('http://www.w3.org/2000/svg','path');\n  for(i = 0; i < element.attributes.length; i++) {\n    attr = element.attributes[i];\n    if (this.ATTR_WATCH.indexOf(attr.name) === -1) {\n      pathTag.setAttribute(attr.name, attr.value);\n    }\n  }\n  for(i in pathData) {\n    pathTag.setAttribute(i, pathData[i]);\n  }\n  return pathTag;\n};\n\n/**\n * Parse attributes of a DOM element to\n * get an object of attribute => value\n *\n * @param  {NamedNodeMap} attributes Attributes object from DOM element to parse\n * @return {object}                  Object of attributes\n */\nPathformer.prototype.parseAttr = function (element) {\n  var attr, output = {};\n  for (var i = 0; i < element.length; i++) {\n    attr = element[i];\n    // Check if no data attribute contains '%', or the transformation is impossible\n    if (this.ATTR_WATCH.indexOf(attr.name) !== -1 && attr.value.indexOf('%') !== -1) {\n      throw new Error('Pathformer [parseAttr]: a SVG shape got values in percentage. This cannot be transformed into \\'path\\' tags. Please use \\'viewBox\\'.');\n    }\n    output[attr.name] = attr.value;\n  }\n  return output;\n};\n\n  'use strict';\n\nvar setupEnv, requestAnimFrame, cancelAnimFrame, parsePositiveInt;\n\n/**\n * Vivus\n * Beta version\n *\n * Take any SVG and make the animation\n * to give give the impression of live drawing\n *\n * This in more than just inspired from codrops\n * At that point, it's a pure fork.\n */\n\n/**\n * Class constructor\n * option structure\n *   type: 'delayed'|'sync'|'oneByOne'|'script' (to know if the items must be drawn synchronously or not, default: delayed)\n *   duration: <int> (in frames)\n *   start: 'inViewport'|'manual'|'autostart' (start automatically the animation, default: inViewport)\n *   delay: <int> (delay between the drawing of first and last path)\n *   dashGap <integer> whitespace extra margin between dashes\n *   pathTimingFunction <function> timing animation function for each path element of the SVG\n *   animTimingFunction <function> timing animation function for the complete SVG\n *   forceRender <boolean> force the browser to re-render all updated path items\n *   selfDestroy <boolean> removes all extra styling on the SVG, and leaves it as original\n *\n * The attribute 'type' is by default on 'delayed'.\n *  - 'delayed'\n *    all paths are draw at the same time but with a\n *    little delay between them before start\n *  - 'sync'\n *    all path are start and finish at the same time\n *  - 'oneByOne'\n *    only one path is draw at the time\n *    the end of the first one will trigger the draw\n *    of the next one\n *\n * All these values can be overwritten individually\n * for each path item in the SVG\n * The value of frames will always take the advantage of\n * the duration value.\n * If you fail somewhere, an error will be thrown.\n * Good luck.\n *\n * @constructor\n * @this {Vivus}\n * @param {DOM|String}   element  Dom element of the SVG or id of it\n * @param {Object}       options  Options about the animation\n * @param {Function}     callback Callback for the end of the animation\n */\nfunction Vivus (element, options, callback) {\n\n  setupEnv();\n\n  // Setup\n  this.isReady = false;\n  this.setElement(element, options);\n  this.setOptions(options);\n  this.setCallback(callback);\n\n  if (this.isReady) {\n    this.init();\n  }\n}\n\n/**\n * Timing functions\n **************************************\n *\n * Default functions to help developers.\n * It always take a number as parameter (between 0 to 1) then\n * return a number (between 0 and 1)\n */\nVivus.LINEAR          = function (x) {return x;};\nVivus.EASE            = function (x) {return -Math.cos(x * Math.PI) / 2 + 0.5;};\nVivus.EASE_OUT        = function (x) {return 1 - Math.pow(1-x, 3);};\nVivus.EASE_IN         = function (x) {return Math.pow(x, 3);};\nVivus.EASE_OUT_BOUNCE = function (x) {\n  var base = -Math.cos(x * (0.5 * Math.PI)) + 1,\n    rate = Math.pow(base,1.5),\n    rateR = Math.pow(1 - x, 2),\n    progress = -Math.abs(Math.cos(rate * (2.5 * Math.PI) )) + 1;\n  return (1- rateR) + (progress * rateR);\n};\n\n\n/**\n * Setters\n **************************************\n */\n\n/**\n * Check and set the element in the instance\n * The method will not return anything, but will throw an\n * error if the parameter is invalid\n *\n * @param {DOM|String}   element  SVG Dom element or id of it\n */\nVivus.prototype.setElement = function (element, options) {\n  var onLoad, self;\n\n  // Basic check\n  if (typeof element === 'undefined') {\n    throw new Error('Vivus [constructor]: \"element\" parameter is required');\n  }\n\n  // Set the element\n  if (element.constructor === String) {\n    element = document.getElementById(element);\n    if (!element) {\n      throw new Error('Vivus [constructor]: \"element\" parameter is not related to an existing ID');\n    }\n  }\n  this.parentEl = element;\n\n  // Load the SVG with XMLHttpRequest and extract the SVG\n  if (options && options.file) {\n    var self = this;\n    onLoad = function (e) {\n      var domSandbox = document.createElement('div');\n      domSandbox.innerHTML = this.responseText;\n\n      var svgTag = domSandbox.querySelector('svg');\n      if (!svgTag) {\n        throw new Error('Vivus [load]: Cannot find the SVG in the loaded file : ' + options.file);\n      }\n\n      self.el = svgTag\n      self.el.setAttribute('width', '100%');\n      self.el.setAttribute('height', '100%');\n      self.parentEl.appendChild(self.el)\n      self.isReady = true;\n      self.init();\n      self = null;\n    }\n    \n    var oReq = new window.XMLHttpRequest();\n    oReq.addEventListener('load', onLoad);\n    oReq.open('GET', options.file);\n    oReq.send();\n    return;\n  }\n\n  switch (element.constructor) {\n  case window.SVGSVGElement:\n  case window.SVGElement:\n  case window.SVGGElement:\n    this.el = element;\n    this.isReady = true;\n    break;\n\n  case window.HTMLObjectElement:\n    self = this;\n    onLoad = function (e) {\n      if (self.isReady) {\n        return;\n      }\n      self.el = element.contentDocument && element.contentDocument.querySelector('svg');\n      if (!self.el && e) {\n        throw new Error('Vivus [constructor]: object loaded does not contain any SVG');\n      }\n      else if (self.el) {\n        if (element.getAttribute('built-by-vivus')) {\n          self.parentEl.insertBefore(self.el, element);\n          self.parentEl.removeChild(element);\n          self.el.setAttribute('width', '100%');\n          self.el.setAttribute('height', '100%');\n        }\n        self.isReady = true;\n        self.init();\n        self = null;\n      }\n    };\n\n    if (!onLoad()) {\n      element.addEventListener('load', onLoad);\n    }\n    break;\n\n  default:\n    throw new Error('Vivus [constructor]: \"element\" parameter is not valid (or miss the \"file\" attribute)');\n  }\n};\n\n/**\n * Set up user option to the instance\n * The method will not return anything, but will throw an\n * error if the parameter is invalid\n *\n * @param  {object} options Object from the constructor\n */\nVivus.prototype.setOptions = function (options) {\n  var allowedTypes = ['delayed', 'sync', 'async', 'nsync', 'oneByOne', 'scenario', 'scenario-sync'];\n  var allowedStarts =  ['inViewport', 'manual', 'autostart'];\n\n  // Basic check\n  if (options !== undefined && options.constructor !== Object) {\n    throw new Error('Vivus [constructor]: \"options\" parameter must be an object');\n  }\n  else {\n    options = options || {};\n  }\n\n  // Set the animation type\n  if (options.type && allowedTypes.indexOf(options.type) === -1) {\n    throw new Error('Vivus [constructor]: ' + options.type + ' is not an existing animation `type`');\n  }\n  else {\n    this.type = options.type || allowedTypes[0];\n  }\n\n  // Set the start type\n  if (options.start && allowedStarts.indexOf(options.start) === -1) {\n    throw new Error('Vivus [constructor]: ' + options.start + ' is not an existing `start` option');\n  }\n  else {\n    this.start = options.start || allowedStarts[0];\n  }\n\n  this.isIE         = (window.navigator.userAgent.indexOf('MSIE') !== -1 || window.navigator.userAgent.indexOf('Trident/') !== -1 || window.navigator.userAgent.indexOf('Edge/') !== -1 );\n  this.duration     = parsePositiveInt(options.duration, 120);\n  this.delay        = parsePositiveInt(options.delay, null);\n  this.dashGap      = parsePositiveInt(options.dashGap, 1);\n  this.forceRender  = options.hasOwnProperty('forceRender') ? !!options.forceRender : this.isIE;\n  this.reverseStack = !!options.reverseStack;\n  this.selfDestroy  = !!options.selfDestroy;\n  this.onReady      = options.onReady;\n  this.map          = [];\n  this.frameLength  = this.currentFrame = this.delayUnit = this.speed = this.handle = null;\n\n  this.ignoreInvisible = options.hasOwnProperty('ignoreInvisible') ? !!options.ignoreInvisible : false;\n\n  this.animTimingFunction = options.animTimingFunction || Vivus.LINEAR;\n  this.pathTimingFunction = options.pathTimingFunction || Vivus.LINEAR;\n\n  if (this.delay >= this.duration) {\n    throw new Error('Vivus [constructor]: delay must be shorter than duration');\n  }\n};\n\n/**\n * Set up callback to the instance\n * The method will not return enything, but will throw an\n * error if the parameter is invalid\n *\n * @param  {Function} callback Callback for the animation end\n */\nVivus.prototype.setCallback = function (callback) {\n  // Basic check\n  if (!!callback && callback.constructor !== Function) {\n    throw new Error('Vivus [constructor]: \"callback\" parameter must be a function');\n  }\n  this.callback = callback || function () {};\n};\n\n\n/**\n * Core\n **************************************\n */\n\n/**\n * Map the svg, path by path.\n * The method return nothing, it just fill the\n * `map` array. Each item in this array represent\n * a path element from the SVG, with informations for\n * the animation.\n *\n * ```\n * [\n *   {\n *     el: <DOMobj> the path element\n *     length: <number> length of the path line\n *     startAt: <number> time start of the path animation (in frames)\n *     duration: <number> path animation duration (in frames)\n *   },\n *   ...\n * ]\n * ```\n *\n */\nVivus.prototype.mapping = function () {\n  var i, paths, path, pAttrs, pathObj, totalLength, lengthMeter, timePoint;\n  timePoint = totalLength = lengthMeter = 0;\n  paths = this.el.querySelectorAll('path');\n\n  for (i = 0; i < paths.length; i++) {\n    path = paths[i];\n    if (this.isInvisible(path)) {\n      continue;\n    }\n    pathObj = {\n      el: path,\n      length: Math.ceil(path.getTotalLength())\n    };\n    // Test if the path length is correct\n    if (isNaN(pathObj.length)) {\n      if (window.console && console.warn) {\n        console.warn('Vivus [mapping]: cannot retrieve a path element length', path);\n      }\n      continue;\n    }\n    this.map.push(pathObj);\n    path.style.strokeDasharray  = pathObj.length + ' ' + (pathObj.length + this.dashGap * 2);\n    path.style.strokeDashoffset = pathObj.length + this.dashGap;\n    pathObj.length += this.dashGap;\n    totalLength += pathObj.length;\n\n    this.renderPath(i);\n  }\n\n  totalLength = totalLength === 0 ? 1 : totalLength;\n  this.delay = this.delay === null ? this.duration / 3 : this.delay;\n  this.delayUnit = this.delay / (paths.length > 1 ? paths.length - 1 : 1);\n\n  // Reverse stack if asked\n  if (this.reverseStack) {\n    this.map.reverse();\n  }\n\n  for (i = 0; i < this.map.length; i++) {\n    pathObj = this.map[i];\n\n    switch (this.type) {\n    case 'delayed':\n      pathObj.startAt = this.delayUnit * i;\n      pathObj.duration = this.duration - this.delay;\n      break;\n\n    case 'oneByOne':\n      pathObj.startAt = lengthMeter / totalLength * this.duration;\n      pathObj.duration = pathObj.length / totalLength * this.duration;\n      break;\n\n    case 'sync':\n    case 'async':\n    case 'nsync':\n      pathObj.startAt = 0;\n      pathObj.duration = this.duration;\n      break;\n\n    case 'scenario-sync':\n      path = pathObj.el;\n      pAttrs = this.parseAttr(path);\n      pathObj.startAt = timePoint + (parsePositiveInt(pAttrs['data-delay'], this.delayUnit) || 0);\n      pathObj.duration = parsePositiveInt(pAttrs['data-duration'], this.duration);\n      timePoint = pAttrs['data-async'] !== undefined ? pathObj.startAt : pathObj.startAt + pathObj.duration;\n      this.frameLength = Math.max(this.frameLength, (pathObj.startAt + pathObj.duration));\n      break;\n\n    case 'scenario':\n      path = pathObj.el;\n      pAttrs = this.parseAttr(path);\n      pathObj.startAt = parsePositiveInt(pAttrs['data-start'], this.delayUnit) || 0;\n      pathObj.duration = parsePositiveInt(pAttrs['data-duration'], this.duration);\n      this.frameLength = Math.max(this.frameLength, (pathObj.startAt + pathObj.duration));\n      break;\n    }\n    lengthMeter += pathObj.length;\n    this.frameLength = this.frameLength || this.duration;\n  }\n};\n\n/**\n * Interval method to draw the SVG from current\n * position of the animation. It update the value of\n * `currentFrame` and re-trace the SVG.\n *\n * It use this.handle to store the requestAnimationFrame\n * and clear it one the animation is stopped. So this\n * attribute can be used to know if the animation is\n * playing.\n *\n * Once the animation at the end, this method will\n * trigger the Vivus callback.\n *\n */\nVivus.prototype.drawer = function () {\n  var self = this;\n  this.currentFrame += this.speed;\n\n  if (this.currentFrame <= 0) {\n    this.stop();\n    this.reset();\n  } else if (this.currentFrame >= this.frameLength) {\n    this.stop();\n    this.currentFrame = this.frameLength;\n    this.trace();\n    if (this.selfDestroy) {\n      this.destroy();\n    }\n  } else {\n    this.trace();\n    this.handle = requestAnimFrame(function () {\n      self.drawer();\n    });\n    return;\n  }\n\n  this.callback(this);\n  if (this.instanceCallback) {\n    this.instanceCallback(this);\n    this.instanceCallback = null;\n  }\n};\n\n/**\n * Draw the SVG at the current instant from the\n * `currentFrame` value. Here is where most of the magic is.\n * The trick is to use the `strokeDashoffset` style property.\n *\n * For optimisation reasons, a new property called `progress`\n * is added in each item of `map`. This one contain the current\n * progress of the path element. Only if the new value is different\n * the new value will be applied to the DOM element. This\n * method save a lot of resources to re-render the SVG. And could\n * be improved if the animation couldn't be played forward.\n *\n */\nVivus.prototype.trace = function () {\n  var i, progress, path, currentFrame;\n  currentFrame = this.animTimingFunction(this.currentFrame / this.frameLength) * this.frameLength;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    progress = (currentFrame - path.startAt) / path.duration;\n    progress = this.pathTimingFunction(Math.max(0, Math.min(1, progress)));\n    if (path.progress !== progress) {\n      path.progress = progress;\n      path.el.style.strokeDashoffset = Math.floor(path.length * (1 - progress));\n      this.renderPath(i);\n    }\n  }\n};\n\n/**\n * Method forcing the browser to re-render a path element\n * from it's index in the map. Depending on the `forceRender`\n * value.\n * The trick is to replace the path element by it's clone.\n * This practice is not recommended because it's asking more\n * ressources, too much DOM manupulation..\n * but it's the only way to let the magic happen on IE.\n * By default, this fallback is only applied on IE.\n *\n * @param  {Number} index Path index\n */\nVivus.prototype.renderPath = function (index) {\n  if (this.forceRender && this.map && this.map[index]) {\n    var pathObj = this.map[index],\n        newPath = pathObj.el.cloneNode(true);\n    pathObj.el.parentNode.replaceChild(newPath, pathObj.el);\n    pathObj.el = newPath;\n  }\n};\n\n/**\n * When the SVG object is loaded and ready,\n * this method will continue the initialisation.\n *\n * This this mainly due to the case of passing an\n * object tag in the constructor. It will wait\n * the end of the loading to initialise.\n *\n */\nVivus.prototype.init = function () {\n  // Set object variables\n  this.frameLength = 0;\n  this.currentFrame = 0;\n  this.map = [];\n\n  // Start\n  new Pathformer(this.el);\n  this.mapping();\n  this.starter();\n\n  if (this.onReady) {\n    this.onReady(this);\n  }\n};\n\n/**\n * Trigger to start of the animation.\n * Depending on the `start` value, a different script\n * will be applied.\n *\n * If the `start` value is not valid, an error will be thrown.\n * Even if technically, this is impossible.\n *\n */\nVivus.prototype.starter = function () {\n  switch (this.start) {\n  case 'manual':\n    return;\n\n  case 'autostart':\n    this.play();\n    break;\n\n  case 'inViewport':\n    var self = this,\n    listener = function () {\n      if (self.isInViewport(self.parentEl, 1)) {\n        self.play();\n        window.removeEventListener('scroll', listener);\n      }\n    };\n    window.addEventListener('scroll', listener);\n    listener();\n    break;\n  }\n};\n\n\n/**\n * Controls\n **************************************\n */\n\n/**\n * Get the current status of the animation between\n * three different states: 'start', 'progress', 'end'.\n * @return {string} Instance status\n */\nVivus.prototype.getStatus = function () {\n  return this.currentFrame === 0 ? 'start' : this.currentFrame === this.frameLength ? 'end' : 'progress';\n};\n\n/**\n * Reset the instance to the initial state : undraw\n * Be careful, it just reset the animation, if you're\n * playing the animation, this won't stop it. But just\n * make it start from start.\n *\n */\nVivus.prototype.reset = function () {\n  return this.setFrameProgress(0);\n};\n\n/**\n * Set the instance to the final state : drawn\n * Be careful, it just set the animation, if you're\n * playing the animation on rewind, this won't stop it.\n * But just make it start from the end.\n *\n */\nVivus.prototype.finish = function () {\n  return this.setFrameProgress(1);\n};\n\n/**\n * Set the level of progress of the drawing.\n *\n * @param {number} progress Level of progress to set\n */\nVivus.prototype.setFrameProgress = function (progress) {\n  progress = Math.min(1, Math.max(0, progress));\n  this.currentFrame = Math.round(this.frameLength * progress);\n  this.trace();\n  return this;\n};\n\n/**\n * Play the animation at the desired speed.\n * Speed must be a valid number (no zero).\n * By default, the speed value is 1.\n * But a negative value is accepted to go forward.\n *\n * And works with float too.\n * But don't forget we are in JavaScript, se be nice\n * with him and give him a 1/2^x value.\n *\n * @param  {number} speed Animation speed [optional]\n */\nVivus.prototype.play = function (speed, callback) {\n  this.instanceCallback = null;\n\n  if (speed && typeof speed === 'function') {\n    this.instanceCallback = speed; // first parameter is actually the callback function\n    speed = null;\n  }\n  else if (speed && typeof speed !== 'number') {\n    throw new Error('Vivus [play]: invalid speed');\n  }\n  // if the first parameter wasn't the callback, check if the seconds was\n  if (callback && typeof(callback) === 'function' && !this.instanceCallback) {\n    this.instanceCallback = callback;\n  }\n\n\n  this.speed = speed || 1;\n  if (!this.handle) {\n    this.drawer();\n  }\n  return this;\n};\n\n/**\n * Stop the current animation, if on progress.\n * Should not trigger any error.\n *\n */\nVivus.prototype.stop = function () {\n  if (this.handle) {\n    cancelAnimFrame(this.handle);\n    this.handle = null;\n  }\n  return this;\n};\n\n/**\n * Destroy the instance.\n * Remove all bad styling attributes on all\n * path tags\n *\n */\nVivus.prototype.destroy = function () {\n  this.stop();\n  var i, path;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    path.el.style.strokeDashoffset = null;\n    path.el.style.strokeDasharray = null;\n    this.renderPath(i);\n  }\n};\n\n\n/**\n * Utils methods\n * include methods from Codrops\n **************************************\n */\n\n/**\n * Method to best guess if a path should added into\n * the animation or not.\n *\n * 1. Use the `data-vivus-ignore` attribute if set\n * 2. Check if the instance must ignore invisible paths\n * 3. Check if the path is visible\n *\n * For now the visibility checking is unstable.\n * It will be used for a beta phase.\n *\n * Other improvments are planned. Like detecting\n * is the path got a stroke or a valid opacity.\n */\nVivus.prototype.isInvisible = function (el) {\n  var rect,\n    ignoreAttr = el.getAttribute('data-ignore');\n\n  if (ignoreAttr !== null) {\n    return ignoreAttr !== 'false';\n  }\n\n  if (this.ignoreInvisible) {\n    rect = el.getBoundingClientRect();\n    return !rect.width && !rect.height;\n  }\n  else {\n    return false;\n  }\n};\n\n/**\n * Parse attributes of a DOM element to\n * get an object of {attributeName => attributeValue}\n *\n * @param  {object} element DOM element to parse\n * @return {object}         Object of attributes\n */\nVivus.prototype.parseAttr = function (element) {\n  var attr, output = {};\n  if (element && element.attributes) {\n    for (var i = 0; i < element.attributes.length; i++) {\n      attr = element.attributes[i];\n      output[attr.name] = attr.value;\n    }\n  }\n  return output;\n};\n\n/**\n * Reply if an element is in the page viewport\n *\n * @param  {object} el Element to observe\n * @param  {number} h  Percentage of height\n * @return {boolean}\n */\nVivus.prototype.isInViewport = function (el, h) {\n  var scrolled   = this.scrollY(),\n    viewed       = scrolled + this.getViewportH(),\n    elBCR        = el.getBoundingClientRect(),\n    elHeight     = elBCR.height,\n    elTop        = scrolled + elBCR.top,\n    elBottom     = elTop + elHeight;\n\n  // if 0, the element is considered in the viewport as soon as it enters.\n  // if 1, the element is considered in the viewport only when it's fully inside\n  // value in percentage (1 >= h >= 0)\n  h = h || 0;\n\n  return (elTop + elHeight * h) <= viewed && (elBottom) >= scrolled;\n};\n\n\n/**\n * Get the viewport height in pixels\n *\n * @return {integer} Viewport height\n */\nVivus.prototype.getViewportH = function () {\n  var client = this.docElem.clientHeight,\n    inner = window.innerHeight;\n\n  if (client < inner) {\n    return inner;\n  }\n  else {\n    return client;\n  }\n};\n\n/**\n * Get the page Y offset\n *\n * @return {integer} Page Y offset\n */\nVivus.prototype.scrollY = function () {\n  return window.pageYOffset || this.docElem.scrollTop;\n};\n\nsetupEnv = function () {\n\n  if (Vivus.prototype.docElem) {\n    return;\n  }\n\n  /**\n   * Alias for document element\n   *\n   * @type {DOMelement}\n   */\n  Vivus.prototype.docElem = window.document.documentElement;\n\n  /**\n   * Alias for `requestAnimationFrame` or\n   * `setTimeout` function for deprecated browsers.\n   *\n   */\n  requestAnimFrame = (function () {\n    return (\n      window.requestAnimationFrame       ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame    ||\n      window.oRequestAnimationFrame      ||\n      window.msRequestAnimationFrame     ||\n      function(/* function */ callback){\n        return window.setTimeout(callback, 1000 / 60);\n      }\n    );\n  })();\n\n  /**\n   * Alias for `cancelAnimationFrame` or\n   * `cancelTimeout` function for deprecated browsers.\n   *\n   */\n  cancelAnimFrame = (function () {\n    return (\n      window.cancelAnimationFrame       ||\n      window.webkitCancelAnimationFrame ||\n      window.mozCancelAnimationFrame    ||\n      window.oCancelAnimationFrame      ||\n      window.msCancelAnimationFrame     ||\n      function(id){\n        return window.clearTimeout(id);\n      }\n    );\n  })();\n};\n\n/**\n * Parse string to integer.\n * If the number is not positive or null\n * the method will return the default value\n * or 0 if undefined\n *\n * @param {string} value String to parse\n * @param {*} defaultValue Value to return if the result parsed is invalid\n * @return {number}\n *\n */\nparsePositiveInt = function (value, defaultValue) {\n  var output = parseInt(value, 10);\n  return (output >= 0) ? output : defaultValue;\n};\n\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function() {\n      return Vivus;\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = Vivus;\n  } else {\n    // Browser globals\n    window.Vivus = Vivus;\n  }\n\n}());\n"]}